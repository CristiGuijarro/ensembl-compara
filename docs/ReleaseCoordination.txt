  COMPARA PRODUCTION CYCLE
============================

1. Once the release coordinator has sent the mail for declaration of
intention, ask the other members of compara group (or related) what
they intend to produce. Sometimes, you have to wait a bit that gene
builders do their declaration first to know what compara will need to
produce and also potential schema changes. Compara has one extra day
to send the DOI, because we have to know which new species are added.

For homologues and families, ask Albert (avilella@ebi.ac.uk).  
For whole genome alignments and synteny ask Javier (jherrero@ebi.ac.uk). 

2. Mail the compara declaration of intentions to ensembl-admin@ebi.ac.uk
send the DOI after the Genebuilders

3. Define priorities and assign jobs to the team members.

3bis. The current (rel.56) compara_master database is sf5_ensembl_compara_master on compara1 

4. Add in the master compara database
(compara1:3306/kb3_ensembl_compara_master) the new entries in the
genome_db and dnafrag tables. You can set up your registry and use the
~ensembl-compara/scripts/pipeline/update_genome.pl script. This script
sets the new genome_dbs as the default assemblies.
You have to create new genome_db_id (dnafrag) when it is a new assembly, or a new species. 
Sometimes it's done by the pairwise guys as they want to start building earlier. 

eg. 
perl update_genome.pl --reg_conf reg_conf_v44.pl --compara compara_master --species bushbaby

eg.
perl /nfs/acari/avilella/src/ensembl_main/ensembl-compara/scripts/pipeline/update_genome.pl \
 --reg_conf /lustre/work1/ensembl/avilella/hive/avilella_compara_homology_48/v48.conf \
 --compara compara-master --species "Ochotona princeps"

5. Wait for the handover before starting to build the new database in case
any of the new species cannot make it. Don't forget to switch the
assembly_default values of genome_db in this case.
 [1] for species making it / used in the pipeline
 [0] for species not making it / or old assemblies

6. Update the ncbi_taxa_node and ncbi_taxa_name in the master DB using the
ncbi_taxonomy database located in mysql::/ens-livemirror:3306/ncbi_taxonomy
This is usually done by the person who runs the orthologs/paralogs.
For more information, here is the doc ensembl-compara/scripts/taxonomy/README-taxonomy

mysqldump -u ensro -h ens-livemirror -P3306 --extended-insert --compress --delayed-insert ncbi_taxonomy \
ncbi_taxa_node ncbi_taxa_name | mysql -u ensadmin -pxxxx -h compara1 kb3_ensembl_compara_master

Some of the species need fixing to be webcode-compatible. This is usually done in ens-livemirror, so it's not needed anywhere else. E.g.:

 "update ncbi_taxa_name set name = \"Canis familiaris\" where taxon_id = 9615 and name_class = \"scientific name\" and name = \"Canis lupus familiaris\""
 "update ncbi_taxa_name set name = \"Canis lupus familiaris\" where taxon_id = 9615 and name_class = \"synonym\" and name = \"Canis familiaris\""

 "update ncbi_taxa_name set name = \"Pongo abelii\" where taxon_id = 9600 and name_class = \"scientific name\" and name = \"Pongo pygmaeus abelii\""
 "update ncbi_taxa_name set name = \"Pongo pygmaeus abelii\" where taxon_id = 9600 and name_class = \"synonym\" and name = \"Pongo pygmaeus abelii\""

7. New method_link_species_set entries might be added using the
~ensembl-compara/scripts/pipeline/create_mlss.pl script. The release
coordinator (or any team member) should create a new
method_link_species_set in the master database before starting a new
pipeline in order to get a unique method_link_species_set_id. Ideally
they can be created before starting to build the new database although
new method_link_species_sets can be added later on.
Sometimes the DNA alignment guys add the MLSS themselves. 
For the homologies this is done by the homologues guys

eg. for the pairwise alignment
 perl create_mlss.pl --method_link_type  BLASTZ_NET --genome_db_id 22,51 --source "ensembl"  --reg_conf reg_conf_v44.pl --compara compara_master

# --pw stands for all pairwised genome_db_ids in the list provided
# --sg stands for keep genome_db_id in the list alone (singleton) 

#orthologues
echo -e "201\n" | /usr/local/ensembl/bin/perl /nfs/acari/avilella/src/ensembl_main/ensembl-compara/scripts/pipeline/create_mlss.pl --reg_conf /lustre/work1/ensembl/avilella/hive/avilella_compara_homology_53/mlss_53.conf --pw --f --genome_db_id "3,4,5,16,18,22,27,29,31,33,34,36,37,38,39,42,43,44,46,48,49,51,52,53,55,56,57,58,60,61,62,64,65,66,67,68,69,77,78,79,80,81,82,83,84,85,86,87,88" 1>create_mlss.ENSEMBL_ORTHOLOGUES.201.out 2>create_mlss.ENSEMBL_ORTHOLOGUES.201.err

# paralogues btw                              
echo -e "202\n" | /usr/local/ensembl/bin/perl /nfs/acari/avilella/src/ensembl_main/ensembl-compara/scripts/pipeline/create_mlss.pl --reg_conf /lustre/work1/ensembl/avilella/hive/avilella_compara_homology_53/mlss_53.conf --pw --f --genome_db_id "3,4,5,16,18,22,27,29,31,33,34,36,37,38,39,42,43,44,46,48,49,51,52,53,55,56,57,58,60,61,62,64,65,66,67,68,69,77,78,79,80,81,82,83,84,85,86,87,88" 1>create_mlss.ENSEMBL_PARALOGUES.btw.202.out 2>create_mlss.ENSEMBL_PARALOGUES.btw.202.err

# paralogues wth                              
echo -e "202\n" | /usr/local/ensembl/bin/perl /nfs/acari/avilella/src/ensembl_main/ensembl-compara/scripts/pipeline/create_mlss.pl --f --reg_conf /lustre/work1/ensembl/avilella/hive/avilella_compara_homology_53/mlss_53.conf --sg --genome_db_id "3,4,5,16,18,22,27,29,31,33,34,36,37,38,39,42,43,44,46,48,49,51,52,53,55,56,57,58,60,61,62,64,65,66,67,68,69,77,78,79,80,81,82,83,84,85,86,87,88" 1>create_mlss.ENSEMBL_PARALOGUES.wth.202.out 2>create_mlss.ENSEMBL_PARALOGUES.wth.202.err

# proteintrees                                
echo -e "401\n" | /usr/local/ensembl/bin/perl /nfs/acari/avilella/src/ensembl_main/ensembl-compara/scripts/pipeline/create_mlss.pl --f --reg_conf /lustre/work1/ensembl/avilella/hive/avilella_compara_homology_53/mlss_53.conf --name "protein trees" --genome_db_id "3,4,5,16,18,22,27,29,31,33,34,36,37,38,39,42,43,44,46,48,49,51,52,53,55,56,57,58,60,61,62,64,65,66,67,68,69,77,78,79,80,81,82,83,84,85,86,87,88" 1>create_mlss.PROTEIN_TREES.401.out 2>create_mlss.PROTEIN_TREES.401.err

# families
echo -e "301\n" | /usr/local/ensembl/bin/perl /nfs/acari/avilella/src/ensembl_main/ensembl-compara/scripts/pipeline/create_mlss.pl --f --reg_conf /lustre/work1/ensembl/avilella/hive/avilella_compara_homology_53/mlss_53.conf --name "families" --genome_db_id "3,4,5,16,18,22,27,29,31,33,34,36,37,38,39,42,43,44,46,48,49,51,52,53,55,56,57,58,60,61,62,64,65,66,67,68,69,77,78,79,80,81,82,83,84,85,86,87,88" 1>create_mlss.FAMILY.301.out 2>create_mlss.FAMILY.301.err

8. Create the new database for the new release and add it to your
registry configuration file. Use the ~ensembl-compara/sql/table.sql
file to create the tables and populate the database with the relevant
primary data and genomic alignments that can be reused from the
previous release. This can be done with the
~ensembl-compara/scripts/pipeline/populate_new_database.pl script.  It
requires the master database, the previous released database and the
fresh new database with the tables already created. The script will
copy relevant data from the master and the old database into the new
one. 

Note: make sure there are no error messages, as sometimes different
versions of mysql may give you an error message about invalid options
of mysqldump.

  mysql -u USER -pPASSWD -h compara1 -P 3306 \
      -e "CREATE DATABASE avilella_ensembl_compara_48"
  mysql -u USER -pPASSWD -h compara1 -P 3306 \
      avilella_ensembl_compara_48 < ~lg4/work/ensembl-compara/sql/table.sql

  populate_new_database.pl --master compara_master --old compara_55 --new compara_56

If new method_link_species_sets are added in the master after this, you use this
script again to copy the new relevant data. In such case, you will have to skip
the old_database in order to avoid trying to copy the dna-dna alignments and
syntenies again.

  populate_new_database.pl --master compara_master --new compara_48

9. Check that primary data (species data, dnafrags...) in the new compara DB
match the data in the corresponding core databases using the healthchecks. You
may have to edit the ensj-healthcheck/database.properties file. It should look
like this:

    host=compara1
    port=3306
    user=ensadmin
    password=***********

    # Database driver class - shouldn't need to be changed
    driver=org.gjt.mm.mysql.Driver

    # Master schema - see CompareSchema healthcheck
    # This setting is ignored if CompareSchema is not run
    master.schema=master_schema_38

    # Secondary database connection details
    secondary.host=ecs2
    secondary.port=3364
    secondary.user=ensro
    secondary.driver=org.gjt.mm.mysql.Driver

Now you can run the compara-compara_external_foreign_keys healthchecks:

  ./run-healthcheck.sh -d lg4_ensembl_compara_56 -type compara -d2 .+_core_56_.+ compara_external_foreign_keys

...and correct mismatches if any!

10. Merge data. The fastest way to merge new data is to mysqlimport them.

- Translated BLAT

  It's now translated-blat-net.

- TRANSLATED_BLAT_NET, BlastZ-Net, Pecan, Gerp

  These data should be in a production database. You can copy them using the
  copy_data.pl script in ensembl-compara/scripts/pipeline. This script requires
  write access in the production database if the dnafrag_ids need fixing or the
  data must be copyied in binary mode (this is required for conservation scores).
  Example:

  bsub -q yesterday -I ensembl-compara/scripts/pipeline/copy_data.pl \
    --from_url mysql://ro_user@host/production_db \
    --to_url mysql://rw_user:password@host/release_db --mlss 268

- Syntenies

  Please refer to the documentation in the ensembl-compara/script/synteny directory.

- Protein trees/homologues/families

  The merge is done by the person in charge of the protein compara production
  side. The compara release coordinator needs to let him/her know where is the
  database to merge to. It involves:

  copying the homology db (usually from compara2 to compara1):

  ssh mysqlens@compara1
  emacs -nw /tmp/avilella_compara_homology_48.copy_options
  compara2        3306    avilella_compara_homology_48        compara1        3306    avilella_compara_homology_48
  perl ~avilella/src/ensembl_main/ensembl/misc-scripts/CopyDBoverServer.pl \
    -pass xxxx -noflush /tmp/avilella_compara_homology_48.copy_options \
    > /tmp/avilella_compara_homology_47.copy.err 2>&1 &

  and then merging the data in compara1 with:

  ssh mysqlens@compara1
  bash
  cd /mysql/data_3306/tmp
  perl /nfs/acari/avilella/src/ensembl_main/ensembl-compara/scripts/pipeline/merge_protein_data.pl \
    -host compara1 -user ensadmin -pass xxxx \
     -src_db avilella_compara_homology_48 \
    -dest_db avilella_ensembl_compara_48 -socket /mysql/data_3306/mysql.sock

- Ancestral database

  Reuse the one in previous release if it hasn't changed and apply core patches:

ssh mysqlens@compara1
emacs -nw /tmp/avilella_ensembl_ancestral_53.copy_options

compara1        3306    kb3_ensembl_ancestral_52        compara1	3306    avilella_ensembl_ancestral_53

bash
perl ~kb3/src/ensembl_main/ensembl/misc-scripts/CopyDBoverServer.pl -pass ensembl -noflush /tmp/avilella_ensembl_ancestral_53.copy_options > /tmp/avilella_ensembl_ancestral_53.copy.err 2>&1 &


ssh mysqlens@ens-staging
emacs -nw /tmp/ensembl_ancestral_53.copy_options

compara1        3306    avilella_ensembl_ancestral_53        ens-staging	3306    ensembl_ancestral_53

bash
perl ~kb3/src/ensembl_main/ensembl/misc-scripts/CopyDBoverServer.pl -pass ensembl -noflush /tmp/ensembl_ancestral_53.copy_options > /tmp/ensembl_ancestral_53.copy.err 2>&1 &


11. Drop method_link_species_set entries for alignments which did not make it.

12. Update the max_alignment_length. You can use the corresponding healthcheck
with the -repair option:

    ./run-healthcheck.sh -d lg4_ensembl_compara_56 -type compara -repair Meta


13. Run the healthchecks:

    ./run-healthcheck.sh -d lg4_ensembl_compara_56 -type compara -d2 .+_core_56_.+ compara_external_foreign_keys
# in rel.56 everything passed apart from CheckTaxon - according to Javier in this particular case it was not a problem

    ./run-healthcheck.sh -d lg4_ensembl_compara_56 -type compara compara_db_constraints
# in rel.56 the following tests failed: ForeignKeyMethodLinkSpeciesSetIdGenomicAlignBlock (the test itself needs updating) and CheckSynteny (human-platypus missing - it is ok)


    ./run-healthcheck.sh -d lg4_ensembl_compara_56 -type compara protein_db_constraints
# in rel.56 all passed

...and correct mismatches if any!

NOTE about Vicugna which may raise an error, but no need to worry about it:
Ok, so then because the classification in the meta table in core is flat, there is no "Vicugna pacos" entry, but a "Vicugna" genus, and a "pacos" that combined gives "Vicugna pacos".
In which case, we should keep the "Lama" genus in NCBI taxonomy, and only change the "Lama pacos" to "Vicugna pacos" as we have done.
This means that I wouldn't worry about this anymore, knowing that is going to raise a warning in the healthchecks, and leave it as it is.


13.5. Run ANALYZE TABLE and OPTIMIZE TABLE commands

mysqlcheck --analyze --verbose --host=compara1 --port=3306 --user=ensadmin --password=ensembl --databases lg4_ensembl_compara_56

# took 12 min. in rel.56

mysqlcheck --optimize --verbose --host=compara1 --port=3306 --user=ensadmin --password=ensembl --databases lg4_ensembl_compara_56

# took 2.5 hours in rel.56


14. Ask the release coordinator to point the test web server to the compara DB.

14.5  Upon confirmation from the release coordinator ask other members of Compara to go to
    http://staging.ensembl.org/
and check their data.


15. Dump both the current and the previous release schemas (using mysqldump -d) and compare them.

Create a patch to convert a compara DB from the previous release to the new one.
The patch should include at least an update of the schema_version in the meta table!

Generate an empty database from the old schema, apply the patch, dump it, and check that you get the new schema.

CVS commit the patch.


16. Update the files in the ~ensembl-compara/sql directory:

cd PATH_TO/ensembl-compara/sql/

mysql -h ens-staging -uensro -N -e "SELECT * FROM genome_db order by genome_db_id asc" ensembl_compara_XX > genome_db.txt
mysql -h ens-staging -uensro -N -e "SELECT * FROM method_link order by method_link_id asc" ensembl_compara_XX > method_link.txt

You will have to change the default schema_version in the table.sql file (last line of the file)

CVS commit these files.


17. Update files in public-plugins/ensembl/htdocs/info/docs/compara

You might need to update the create_mlss_table.conf file with new species added.
Or you can use the order of species given in the species tree:

  ~lg4/work/ensembl-compara/docs/create_mlss_table.pl \
    --reg_conf ~/release_56/reg_conf.pl --dbname compara_56 --method_link PECAN \
    --list --species_tree ~lg4/work/ensembl-compara/scripts/pipeline/species_tree_blength.nh > pecan.inc

  ~lg4/work/ensembl-compara/docs/create_mlss_table.pl \
    --reg_conf ~/release_56/reg_conf.pl --dbname compara_56 --method_link EPO \
    --list --species_tree ~lg4/work/ensembl-compara/scripts/pipeline/species_tree_blength.nh > epo.inc

  ~lg4/work/ensembl-compara/docs/create_mlss_table.pl \
    --reg_conf ~/release_56/reg_conf.pl --dbname compara_56 --method_link EPO_LOW_COVERAGE \
    --list --species_tree ~lg4/work/ensembl-compara/scripts/pipeline/species_tree_blength.nh > epo_lc.inc

  ~lg4/work/ensembl-compara/docs/create_mlss_table.pl \
    --reg_conf ~/release_56/reg_conf.pl --dbname compara_56 --method_link TRANSLATED_BLAT_NET \
    --trim --species_tree ~lg4/work/ensembl-compara/scripts/pipeline/species_tree_blength.nh > tblat_net.inc

  ~lg4/work/ensembl-compara/docs/create_mlss_table.pl \
    --reg_conf ~/release_56/reg_conf.pl --dbname compara_56 --method_link BLASTZ_NET \
    --trim --species_tree ~lg4/work/ensembl-compara/scripts/pipeline/species_tree_blength.nh > blastz_net.inc

or to produce a simple list because the table is getting too big

  ~lg4/work/ensembl-compara/docs/create_mlss_table.pl \
    --reg_conf ~/release_56/reg_conf.pl --dbname compara_56 --method_link BLASTZ_NET \
    --blastz_list --species_tree ~lg4/work/ensembl-compara/scripts/pipeline/species_tree_blength.nh > blastz_net.inc


  ~lg4/work/ensembl-compara/docs/create_mlss_table.pl \
    --reg_conf ~/release_56/reg_conf.pl --dbname compara_56 --method_link SYNTENY \
    --trim --species_tree ~lg4/work/ensembl-compara/scripts/pipeline/species_tree_blength.nh > synteny.inc

 ==> The resulting blastz-net table is huge. In order to make it slightly smaller,
   you can divide it into amniota vertebrates and other chordates (see latest
   release for an example) but you'll have to do it manually as the current
   script doesn't know how to do it.


CVS commit these files.

18. When everybody is happy about the databases, actually copy them to the staging server.
This is done by a strange script with a clumsy interface, but take heart:

18.1. First, ssh into the DESTINATION machine:

    # NB: ask for the password on staging well in advance - there may be noone around you at the right moment!
ssh mysqlens@ens-staging

18.2. Create a file that will contain one line with the source/destination parameters, like this:

cat <<EOF >/tmp/lg4_ensembl_compara_56.copy_options
#from_host      from_port   from_dbname                 to_host         to_port     to_dbname
#
compara1        3306        lg4_ensembl_compara_56      ens-staging     3306        ensembl_compara_56
compara1        3306        lg4_ensembl_ancestral_56    ens-staging     3306        ensembl_ancestral_56
EOF


18.3. Run the script to actually copy the data:

    perl ~lg4/work/ensembl/misc-scripts/CopyDBoverServer.pl -pass ensembl \
        -noflush /tmp/lg4_ensembl_compara_56.copy_options > /tmp/lg4_ensembl_compara_56.copy.err 2>&1 &

# copying of rel_56 took 2 hours (SUCCESSFUL for both databases - you should check the output file)


19. Update the schema and tutorial documentation files compara_schema.html and compara_tutorial.html in this directory:
    ensembl-webcode/htdocs/info/docs/api/compara/
    (previously - public-plugins/ensembl/htdocs/info/docs/api/compara )

CVS commit the changes.


20. Updating member.display_label and member.description fields for 'ENSEMBLGENE' members.

NB: This step is normally being done by Albert before integration of Compara components.
So BY DEFAULT YOU SHOULD SKIP IT.
However if xrefs in any of the core databases have been modified during the production process,
you should run this step as well.

Once the compara_db is in ens-staging, we apply this insert that makes joins between core and compara dbs for the member table:

mysql -hens-staging -uensro -N -e 'show databases like "%core\_56\_%"'|awk '{print "UPDATE "$1".xref x, "$1".gene g, "$1".gene_stable_id gsi, member m SET m.display_label=x.display_label WHERE g.display_xref_id=x.xref_id AND g.gene_id=gsi.gene_id AND m.stable_id=gsi.stable_id AND m.source_name=\"ENSEMBLGENE\";"}' > update_display_label.sql

## Or, if you only want to run it with a specific set of databases, you can list them using the 'echo' command below:
#
# echo danio_rerio_core_56_8b '\n' xenopus_tropicalis_core_56_41n | awk '{print "UPDATE "$1".xref x, "$1".gene g, "$1".gene_stable_id gsi, member m SET m.display_label=x.display_label WHERE g.display_xref_id=x.xref_id AND g.gene_id=gsi.gene_id AND m.stable_id=gsi.stable_id AND m.source_name=\"ENSEMBLGENE\";"}' > update_display_label_for_selected_species.sql

mysql -hens-staging -uensadmin -pxxxxx ensembl_compara_56 < update_display_label.sql

mysql -hens-staging -uensro -N -e 'show databases like "%core\_56\_%"'|awk '{ print "UPDATE "$1".gene_stable_id gs, "$1".gene g, member m SET m.description=g.description WHERE g.gene_id=gs.gene_id and gs.stable_id=m.stable_id and m.source_name=\"ENSEMBLGENE\";"}' > update_gene_description.sql

mysql -hens-staging -uensadmin -pxxxxx ensembl_compara_56 < update_gene_description.sql

Ensure that the indexes in all tables in ens-staging are correct. This will do it as yesterday jobs, which are limited to 10 concurrently running:

mysql -hens-staging -uensadmin -pxxxxx ensembl_compara_56 -N -e "show tables" | while read i ; do echo $i===; bsub -q yesterday -o /dev/null -Janalyze.$i mysql -hens-staging -uensadmin -pxxxxx ensembl_compara_56 -N -e "
ANALYZE TABLE $i"; done


#################################################

# Here we are creating a 'transferable' patch that is independent of the core databases being present on the same server,
# so the same patch can be applied on staging and on compara1.
#
# Note the important tricks:
# 1) using the \""$1"\" for inserting strings (outer pair actually adds quotes, inner pair ends awk's quotes to insert $1, $2 values)
# 2) obligatory usage of -F '\t' in the second awk to parse the tab-separated data that comes out of the mysql (but make sure there are no tabs in the string values!)
# 3) substitute NULL instead of "NULL" (as they do not differ in their textual representation, but we happen to know which is which)
# 4) don't forget that member's "stable_id" is not a unique identifier: you should use the (stable_id, source_name) pair.

mysql -hens-staging -uensro -N -e 'show databases like "%core\_56\_%"' | awk '{print "SELECT m.stable_id, x.display_label FROM "$1".xref x, "$1".gene g, "$1".gene_stable_id gsi, member m WHERE g.display_xref_id=x.xref_id AND g.gene_id=gsi.gene_id AND m.stable_id=gsi.stable_id AND m.source_name=\"ENSEMBLGENE\" AND NOT(m.display_label <=> x.display_label) ;"}' | mysql -hens-staging -uensro -N ensembl_compara_56 | awk -F '\t' '{print "UPDATE member SET display_label=\""$2"\" WHERE stable_id=\""$1"\" AND source_name=\"ENSEMBLGENE\"; "}' | sed 's/"NULL"/NULL/' > gene_dlabel_transferable_patch.sql

mysql -hens-staging -uensro -N -e 'show databases like "%core\_56\_%"' | awk '{print "SELECT m.stable_id, x.display_label FROM "$1".xref x, "$1".transcript t, "$1".translation p, "$1".translation_stable_id psi, member m WHERE t.display_xref_id=x.xref_id AND t.transcript_id=p.transcript_id AND p.translation_id=psi.translation_id AND m.stable_id=psi.stable_id AND m.source_name=\"ENSEMBLPEP\" AND NOT (m.display_label <=> x.display_label) ;"}' | mysql -hens-staging -uensro -N ensembl_compara_56 | awk -F '\t' '{print "UPDATE member SET display_label=\""$2"\" WHERE stable_id=\""$1"\" AND source_name=\"ENSEMBLPEP\"; "}' | sed 's/"NULL"/NULL/' > transcript_dlabel_transferable_patch.sql

mysql -hens-staging -uensro -N -e 'show databases like "%core\_56\_%"' | awk '{print "SELECT m.stable_id, g.description FROM "$1".gene g, "$1".gene_stable_id gsi, member m WHERE g.gene_id=gsi.gene_id AND m.stable_id=gsi.stable_id AND m.source_name=\"ENSEMBLGENE\" AND NOT (m.description <=> g.description) ;"}' | mysql -hens-staging -uensro -N ensembl_compara_56 | awk -F '\t' '{print "UPDATE member SET description=\""$2"\" WHERE stable_id=\""$1"\" AND source_name=\"ENSEMBLGENE\"; "}' | sed 's/"NULL"/NULL/' > gene_description_transferable_patch.sql


## However, you can simply dump-and-load the display_labels back to compara1 if you wish:
mysql -hens-staging -uensadmin -pensembl -N -e "SELECT source_name,stable_id,display_label from member where source_name in ('ENSEMBLGENE','ENSEMBLPEP')" ensembl_compara_56 | awk -F '\t' '{print "UPDATE member SET display_label=\""$3"\" WHERE source_name=\""$1"\" AND stable_id=\""$2"\"; "}' | sed 's/"NULL"/NULL/' > staging_dl_update.sql


################################################


21. Don't forget to dump the EMF files to go on the FTP sites, for multiple alignment, and protein trees.

For protein tree (multiple alignments and newick trees), the person in
charge of the pipeline uses ensembl-compara/scripts/tree/dumpTreeMSA.pl script. 
It can dump both files in emf gzip format at the same time.

This is the process to dump the genetree data from Ensembl Compara:

21.0 - Create a dir where to dump each file:

mkdir -p /lustre/scratch1/ensembl/avilella/hive/avilella_compara_homology_56/dumps
cd /lustre/scratch1/ensembl/avilella/hive/avilella_compara_homology_56/dumps

21.1 - Create a file with the genetree ids with this sql command:

mysql -hens-staging -uensro ensembl_compara_56 -N -e "select distinct ptm.root_id from protein_tree_member ptm, protein_tree_tag ptt where ptt.node_id=ptm.root_id and ptt.tag='gene_count' and ptt.value>1" > tree_id_list.txt

21.2 - Create a hash of subdirectories to dump the data evenly:

perl ~/src/ensembl_main/ensembl-personal/avilella/scripts/split_infile.pl -i tree_id_list.txt -l 1 -hashed tree_id_list.txt
Final dir: 01:87:61
wc -l tree_id_list.txt
18762 tree_id_list.txt

21.3 - Create a job for each genetree in a generic hive db like this:

perl ~/src/ensembl_main/ensembl-personal/avilella/hive/cmd_hive.pl -url mysql://ensadmin:ensembl@compara1/avilella_hive_generic -input_id 'perl /nfs/acari/avilella/dumpTreeMSA_id.pl --list /lustre/scratch1/ensembl/avilella/hive/avilella_compara_homology_56/dumps/$h1/$h2/$h3/tree_id_list.txt --url mysql://ensadmin:ensembl@ens-staging/ensembl_compara_56 --nh_out 1 -aln_out 1 -nhx_out 1' -hashed_a 00:00:00 -hashed_b 01:87:61 -hive_capacity 100 -batch_size 5 -logic_name h_emf_dumps_v56_1_1_2 1>out 2>err &

tail -f ???

21.4 - Run the jobs with throttling:

beekeeper.pl -url mysql://ensadmin:ensembl@compara1/avilella_hive_generic -loop -lsf_options '-q normal -R"select[myens_staging<500] rusage[myens_staging=10:duration=10:decay=1]"' -lifespan 1200 -logic_name h_emf_dumps_v56_1_1_2

beekeeper.pl -url mysql://ensadmin:ensembl@compara1/avilella_hive_generic -loop -logic_name h_emf_dumps_v56_1_1_2

21.5 - Once the jobs are finished, cat all the files into one by type:

export TIMESTAMP=`date +2%3y%m%d_%H%M%S`
bsub -q long -o $TIMESTAMP.out -e $TIMESTAMP.err 'find /lustre/scratch1/ensembl/avilella/hive/avilella_compara_homology_56/dumps/ -name "*.aln*" | sort | xargs cat > Compara.gene_trees.56.emf'
sleep 1
export TIMESTAMP=`date +2%3y%m%d_%H%M%S`
bsub -q long -o $TIMESTAMP.out -e $TIMESTAMP.err 'find /lustre/scratch1/ensembl/avilella/hive/avilella_compara_homology_56/dumps/ -name "*.nhx.*" | sort | xargs cat > Compara.nhx_trees.56.emf'
sleep 1
export TIMESTAMP=`date +2%3y%m%d_%H%M%S`
bsub -q long -o $TIMESTAMP.out -e $TIMESTAMP.err 'find /lustre/scratch1/ensembl/avilella/hive/avilella_compara_homology_56/dumps/ -name "*.nh.emf" | sort | xargs cat > Compara.newick_trees.56.emf'

while [ 1 ] ; do bjobs -q long -w | grep find; date; sleep 10; done

21.6 - Compress the files

bsub -o /dev/null  -q yesterday  gzip Compara.newick_trees.56.emf
bsub -o /dev/null  -q yesterday  gzip Compara.nhx_trees.56.emf
bsub -o /dev/null  -q yesterday  gzip Compara.gene_trees.56.emf

while [ 1 ] ; do bjobs -q yesterday -w | grep gzip; date; sleep 10; done

21.7 - Create the final dump directory, copy the README.* files from the previous release and update if needed:

mkdir -p /warehouse/ensembl02/avilella/hive/avilella_compara_homology_56/dumps/
wget ftp://ftp.ensembl.org/pub/current_emf/ensembl-compara/homologies/README.emf
wget ftp://ftp.ensembl.org/pub/current_emf/ensembl-compara/homologies/README.protein_trees
cp /lustre/scratch1/ensembl/avilella/hive/avilella_compara_homology_56/dumps/README.* /warehouse/ensembl02/avilella/hive/avilella_compara_homology_56/dumps/
cp /lustre/scratch1/ensembl/avilella/hive/avilella_compara_homology_56/dumps/*.gz /warehouse/ensembl02/avilella/hive/avilella_compara_homology_56/dumps/

21.8 - Send an email to the release coordinator pointing to the files:

ls -l /warehouse/ensembl02/avilella/hive/avilella_compara_homology_56/dumps/

22. Once the final compara db has been copied, and everyone is happy with the data, and the Compara Coordinator survived his task, well the Compara Coordinator could buy some drinks at the Red Lion after handover. Special clause for Mart related coordinator, the drinks will be after the mart release. 
