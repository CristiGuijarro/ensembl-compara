{\rtf1\mac\ansicpg10000\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\upr{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 00020206030504050203}Times New Roman;}{\f1\fnil\fcharset256\fprq2{\*\panose 00020b06040202020202}Arial;}{\f2\fnil\fcharset256\fprq2{\*\panose 00020703090202050204}Courier New;}{\f3\fnil\fcharset2\fprq2{\*\panose 00020005000000000000}Symbol;}{\f4\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Times;}{\f5\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Helvetica;}{\f6\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Courier;}{\f7\fnil\fcharset256\fprq2{\*\panose 00020b05030304040402}Geneva;}{\f8\froman\fcharset77\fprq2{\*\panose 00000000000000000000}Tms Rmn;}{\f9\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}Helv;}{\f10\froman\fcharset77\fprq2{\*\panose 00000000000000000000}MS Serif;}{\f11\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\froman\fcharset77\fprq2{\*\panose 00000000000000000000}New York;}{\f13\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}System;}{\f14\fnil\fcharset2\fprq2{\*\panose 00050201020108040807}Wingdings;}{\f15\fnil\fcharset78\fprq2 \'82l\'82r \'96\'be\'92\'a9;}{\f16\fnil\fcharset79\fprq2 \'b9\'d9\'c5\'c1;}{\f17\fnil\fcharset80\fprq2 \'cb\'ce\'cc\'e5;}{\f18\fnil\fcharset81\fprq2 \'b7s\'b2\'d3\'a9\'fa\'c5\'e9;}{\f19\fnil\fcharset78\fprq2 \'82l\'82r \'83S\'83V\'83b\'83N;}{\f20\fnil\fcharset256\fprq2{\*\panose 00020406040505050203}Century;}{\f21\fnil\fcharset256\fprq2{\*\panose 00020b06040305040402}Verdana;}{\f22\fnil\fcharset256\fprq2{\*\panose 00020b06040305040402}Tahoma;}{\f23\fnil\fcharset2\fprq2{\*\panose 00010106010101010101}Monotype Sorts;}{\f24\froman\fcharset256\fprq2{\*\panose 00000000000000000000}Timmons{\*\falt Times New Roman};}{\f25\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Nimbus Sans L Condensed{\*\falt Times New Roman};}{\f26\fnil\fcharset256\fprq0{\*\panose 00000000000000000000}DAAAAA+FreeMono;}{\f27\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}FreeMono{\*\falt Times New Roman};}{\f28\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}FreeSans{\*\falt Times New Roman};}{\f29\fnil\fcharset2\fprq0{\*\panose 00000000000000000000}StarSymbol{\*\falt Arial Unicode MS};}{\f30\fswiss\fcharset256\fprq2{\*\panose 00000000000000000000}Helmet{\*\falt Arial};}{\f31\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}HG Mincho Light J{\*\falt MS Mincho};}{\f32\fnil\fcharset256\fprq2 Lucida Grande;}{\f33\fnil\fcharset256\fprq2{\*\panose 00020b0a060301010101}Abadi MT Condensed Extra Bold;}{\f34\fnil\fcharset256\fprq2{\*\panose 00020b03060301010101}Abadi MT Condensed Light;}{\f35\fnil\fcharset256\fprq2{\*\panose 00020000000000000000}Academy Engraved LET;}{\f36\fnil\fcharset256\fprq2{\*\panose 00020906040200040203}American Typewriter;}{\f37\fnil\fcharset256\fprq2{\*\panose 00020906060200040203}American Typewriter Condensed;}{\f38\fnil\fcharset256\fprq2{\*\panose 00020903040200040203}American Typewriter Light;}{\f39\fnil\fcharset256\fprq2{\*\panose 00020b05090000000000}Andale Mono;}{\f40\fnil\fcharset256\fprq2{\*\panose 00030207020405060605}Apple Chancery;}{\f41\fnil\fcharset256\fprq2{\*\panose 00020b0a040201020202}Arial Black;}{\f42\fnil\fcharset256\fprq2{\*\panose 00020b05060202020302}Arial Narrow;}{\f43\fnil\fcharset256\fprq2{\*\panose 00020f07040305040302}Arial Rounded MT Bold;}{\f44\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Bank Gothic;}{\f45\fnil\fcharset256\fprq2{\*\panose 00020205020704010203}Baskerville;}{\f46\fnil\fcharset256\fprq2{\*\panose 00020206020805050203}Baskerville Old Face;}{\f47\fnil\fcharset256\fprq2{\*\panose 00020207020704000202}Baskerville Semibold;}{\f48\fnil\fcharset256\fprq2{\*\panose 0004030905020b02020c}Bauhaus 93;}{\f49\fnil\fcharset256\fprq2{\*\panose 00020205030603050203}Bell MT;}{\f50\fnil\fcharset256\fprq2{\*\panose 00020508060609050204}Bernard MT Condensed;}{\f51\fnil\fcharset256\fprq2{\*\panose 00020006030900000200}Big Caslon;}{\f52\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Blackmoor LET;}{\f53\fnil\fcharset256\fprq2{\*\panose 00000005000000000000}BlairMdITC TT-Medium;}{\f54\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Bodoni Ornaments ITC TT;}{\f55\fnil\fcharset256\fprq2{\*\panose 00000007000000000000}Bodoni SvtyTwo ITC TT-Bold;}{\f56\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Bodoni SvtyTwo ITC TT-Book;}{\f57\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Bodoni SvtyTwo ITC TT-BookIta;}{\f58\fnil\fcharset256\fprq2{\*\panose 00000007000000000000}Bodoni SvtyTwo OS ITC TT-Bold;}{\f59\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Bodoni SvtyTwo OS ITC TT-Book;}{\f60\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Bodoni SvtyTwo OS ITC TT-BookIt;}{\f61\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Bodoni SvtyTwo SC ITC TT-Book;}{\f62\fnil\fcharset256\fprq2{\*\panose 00020406020503050303}Book Antiqua;}{\f63\fnil\fcharset256\fprq2{\*\panose 00020506040505050202}Bookman Old Style;}{\f64\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Bordeaux Roman Bold LET;}{\f65\fnil\fcharset256\fprq2{\*\panose 00000007000000000000}Bradley Hand ITC TT-Bold;}{\f66\fnil\fcharset256\fprq2{\*\panose 0004030b070d0b020204}Braggadocio;}{\f67\fnil\fcharset256\fprq2{\*\panose 00020b09030607030202}Britannic Bold;}{\f68\fnil\fcharset256\fprq2{\*\panose 00030608020404060703}Brush Script MT;}{\f69\fnil\fcharset256\fprq2{\*\panose 00020406030505050303}Calisto MT;}{\f70\fnil\fcharset256\fprq2{\*\panose 00020b05020202020202}Century Gothic;}{\f71\fnil\fcharset256\fprq2{\*\panose 00020406040505050203}Century Schoolbook;}{\f72\fnil\fcharset256\fprq2{\*\panose 00030506020402020202}Chalkboard;}{\f73\fnil\fcharset256\fprq2{\*\panose 00030506020402020202}Chalkboard Bold;}{\f74\fnil\fcharset256\fprq2{\*\panose 00020006030200000200}Cochin;}{\f75\fnil\fcharset256\fprq2{\*\panose 00040208050602020302}Colonna MT;}{\f76\fnil\fcharset256\fprq2{\*\panose 00030f07020303020202}Comic Sans MS;}{\f77\fnil\fcharset256\fprq2{\*\panose 000208090404030b0204}Cooper Black;}{\f78\fnil\fcharset256\fprq2{\*\panose 00020005040000000200}Copperplate;}{\f79\fnil\fcharset256\fprq2{\*\panose 00020e07050202060204}Copperplate Gothic Bold;}{\f80\fnil\fcharset256\fprq2{\*\panose 00020e05070202060204}Copperplate Gothic Light;}{\f81\fnil\fcharset256\fprq2{\*\panose 00020006040300000200}Copperplate Light;}{\f82\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Cracked;}{\f83\fnil\fcharset256\fprq2{\*\panose 00040404040507020202}Curlz MT;}{\f84\fnil\fcharset256\fprq2{\*\panose 0004020505020e030405}Desdemona;}{\f85\fnil\fcharset256\fprq2{\*\panose 00020005030000000200}Didot;}{\f86\fnil\fcharset256\fprq2{\*\panose 00030303020407070d08}Edwardian Script ITC;}{\f87\fnil\fcharset256\fprq2{\*\panose 00020907070805050203}Engravers MT;}{\f88\fnil\fcharset256\fprq2{\*\panose 00020b05030401020201}Euphemia UCAS;}{\f89\fnil\fcharset256\fprq2{\*\panose 00020b08030401020201}Euphemia UCAS Bold;}{\f90\fnil\fcharset256\fprq2{\*\panose 00020b05030401020201}Euphemia UCAS Italic;}{\f91\fnil\fcharset256\fprq2{\*\panose 00020b05040202020502}Eurostile;}{\f92\fnil\fcharset256\fprq2{\*\panose 000204060206030a0203}Footlight MT Light;}{\f93\fnil\fcharset256\fprq2{\*\panose 00020b06020202040203}Futura;}{\f94\fnil\fcharset256\fprq2{\*\panose 00020b05060202040302}Futura Condensed;}{\f95\fnil\fcharset256\fprq2{\*\panose 00020204040303010108}Garamond;}{\f96\fnil\fcharset256\fprq2{\*\panose 00020004000000000000}Geeza Pro;}{\f97\fnil\fcharset256\fprq2{\*\panose 00020007000000000000}Geeza Pro Bold;}{\f98\fnil\fcharset256\fprq2{\*\panose 00020405020504050203}Georgia;}{\f99\fnil\fcharset256\fprq2{\*\panose 00020b05020201040202}Gill Sans;}{\f100\fnil\fcharset256\fprq2{\*\panose 00020b03020201040202}Gill Sans Light;}{\f101\fnil\fcharset256\fprq2{\*\panose 00020b0a020201040202}Gill Sans Ultra Bold;}{\f102\fnil\fcharset256\fprq2{\*\panose 00020308080206010101}Gloucester MT Extra Condensed;}{\f103\fnil\fcharset256\fprq2{\*\panose 00020205020503050203}Goudy Old Style;}{\f104\fnil\fcharset256\fprq2{\*\panose 00020b07060409020602}Haettenschweiler;}{\f105\fnil\fcharset256\fprq2{\*\panose 00020004000000000000}Handwriting - Dakota;}{\f106\fnil\fcharset256\fprq2{\*\panose 0004040505050a020207}Harrington;}{\f107\fnil\fcharset256\fprq2{\*\panose 00020005030000000200}Helvetica Neue;}{\f108\fnil\fcharset256\fprq2{\*\panose 0002000a060000000200}Helvetica Neue Black Condensed;}{\f109\fnil\fcharset256\fprq2{\*\panose 00020008060000000200}Helvetica Neue Bold Condensed;}{\f110\fnil\fcharset256\fprq2{\*\panose 00020004030000000200}Helvetica Neue Light;}{\f111\fnil\fcharset256\fprq2{\*\panose 00020002060000000200}Helvetica Neue UltraLight;}{\f112\fnil\fcharset256\fprq2{\*\panose 00020005050000000200}Herculanum;}{\f113\fnil\fcharset256\fprq2{\*\panose 00020306020505060202}Hoefler Text;}{\f114\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Hoefler Text Ornaments;}{\f115\fnil\fcharset256\fprq2{\*\panose 00020b08060309020502}Impact;}{\f116\fnil\fcharset256\fprq2{\*\panose 00040206050603030302}Imprint MT Shadow;}{\f117\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}InaiMathi;}{\f118\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Jazz LET;}{\f119\fnil\fcharset256\fprq2{\*\panose 00040307050d0c020207}Kino MT;}{\f120\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Lucida Blackletter;}{\f121\fnil\fcharset256\fprq2{\*\panose 00020406020505050203}Lucida Bright;}{\f122\fnil\fcharset256\fprq2{\*\panose 00030101010101010101}Lucida Calligraphy;}{\f123\fnil\fcharset256\fprq2{\*\panose 00020606020505050202}Lucida Fax;}{\f124\fnil\fcharset256\fprq2{\*\panose 00030101010101010101}Lucida Handwriting;}{\f125\fnil\fcharset256\fprq2{\*\panose 00020b06020305040202}Lucida Sans;}{\f126\fnil\fcharset256\fprq2{\*\panose 00020b05090305040302}Lucida Sans Typewriter;}{\f127\fnil\fcharset256\fprq2{\*\panose 00020004000000000000}Marker Felt;}{\f128\fnil\fcharset256\fprq2{\*\panose 00030208020606020702}Matura MT Script Capitals;}{\f129\fnil\fcharset256\fprq2{\*\panose 00030907020304070204}Mistral;}{\f130\fnil\fcharset256\fprq2{\*\panose 00020707040705050203}Modern No. 20;}{\f131\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Mona Lisa Solid ITC TT;}{\f132\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Monaco;}{\f133\fnil\fcharset256\fprq2{\*\panose 00030101010102010101}Monotype Corsiva;}{\f134\fnil\fcharset2\fprq2{\*\panose 00020005000000000000}MT Extra;}{\f135\fnil\fcharset256\fprq2{\*\panose 00020b05040202030202}News Gothic MT;}{\f136\fnil\fcharset256\fprq2{\*\panose 00040506020807020202}Onyx;}{\f137\fnil\fcharset256\fprq2{\*\panose 00020005030600000200}Optima;}{\f138\fnil\fcharset256\fprq2{\*\panose 0002000b030000000200}Optima ExtraBlack;}{\f139\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Palatino;}{\f140\fnil\fcharset256\fprq2{\*\panose 00020b06020402000203}Papyrus;}{\f141\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Party LET;}{\f142\fnil\fcharset256\fprq2{\*\panose 00020205020605050208}Perpetua Titling MT;}{\f143\fnil\fcharset256\fprq2{\*\panose 00020200000000000000}Plantagenet Cherokee;}{\f144\fnil\fcharset256\fprq2{\*\panose 00040506030a06020202}Playbill;}{\f145\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}PortagoITC TT;}{\f146\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Princetown LET;}{\f147\fnil\fcharset256\fprq2{\*\panose 00020606030202050204}Rockwell;}{\f148\fnil\fcharset256\fprq2{\*\panose 00020609030405050204}Rockwell Extra Bold;}{\f149\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Santa Fe LET;}{\f150\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Savoye LET;}{\f151\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}SchoolHouse Cursive B;}{\f152\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}SchoolHouse Printed A;}{\f153\fnil\fcharset256\fprq2{\*\panose 00020d05020202040202}Skia;}{\f154\fnil\fcharset256\fprq2{\*\panose 00020006030800000900}Snell Roundhand;}{\f155\fnil\fcharset256\fprq2{\*\panose 0002000a040900000900}Snell Roundhand Black;}{\f156\fnil\fcharset256\fprq2{\*\panose 00020008030900000900}Snell Roundhand Bold;}{\f157\fnil\fcharset256\fprq2{\*\panose 00040409050d08020204}Stencil;}{\f158\fnil\fcharset256\fprq2{\*\panose 00000007000000000000}Stone Sans ITC TT-Bold;}{\f159\fnil\fcharset256\fprq2{\*\panose 00000006000000000000}Stone Sans ITC TT-Semi;}{\f160\fnil\fcharset256\fprq2{\*\panose 00000006000000000000}Stone Sans ITC TT-SemiIta;}{\f161\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Synchro LET;}{\f162\fnil\fcharset256\fprq2{\*\panose 00020b06030202020202}Trebuchet MS;}{\f163\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Type Embellishments One LET;}{\f164\fnil\fcharset2\fprq2{\*\panose 00050301020105090607}Webdings;}{\f165\fnil\fcharset256\fprq2{\*\panose 00020a0a070505050204}Wide Latin;}{\f166\fnil\fcharset2\fprq2{\*\panose 00050201020105070707}Wingdings 2;}{\f167\fnil\fcharset2\fprq2{\*\panose 00050401020108070707}Wingdings 3;}{\f168\fnil\fcharset2\fprq2{\*\panose 00050201020107040206}Zapf Dingbats;}{\f169\fnil\fcharset256\fprq2{\*\panose 0003030300040707070c}Zapfino;}{\f170\fnil\fcharset88\fprq2{\*\panose 00020005000000000000}Courier CE;}{\f171\fnil\fcharset88\fprq2{\*\panose 00020b05030304040402}Geneva CE;}{\f172\fnil\fcharset88\fprq2{\*\panose 00020005000000000000}Helvetica CE;}{\f173\fnil\fcharset88\fprq2{\*\panose 00020004000000000000}Krungthep;}{\f174\fnil\fcharset88\fprq2{\*\panose 00020b06000405020202}Lucida Grande CE;}{\f175\fnil\fcharset88\fprq2{\*\panose 00020005000000000000}Monaco CE;}{\f176\fnil\fcharset88\fprq2{\*\panose 00000004000000000000}Silom;}{\f177\fnil\fcharset88\fprq2{\*\panose 00020005000000000000}Times CE;}{\f178\fnil\fcharset89\fprq2{\*\panose 00000004000000000000}Ayuthaya;}{\f179\fnil\fcharset89\fprq2{\*\panose 00000004000000000000}Charcoal CY;}{\f180\fnil\fcharset89\fprq2{\*\panose 00000004000000000000}Geneva CY;}{\f181\fnil\fcharset89\fprq2{\*\panose 00000004000000000000}Helvetica CY;}{\f182\fnil\fcharset89\fprq2{\*\panose 00020b06000405020202}Lucida Grande CY;}{\f183\fnil\fcharset89\fprq2{\*\panose 00020005000000000000}Monaco CY;}{\f184\fnil\fcharset89\fprq2{\*\panose 00000004000000000000}Sathu;}{\f185\fnil\fcharset89\fprq2{\*\panose 00000004000000000000}Thonburi;}{\f186\fnil\fcharset89\fprq2{\*\panose 00020005000000000000}Times CY;}{\f187\fnil\fcharset81\fprq2{\*\panose 00020005000000000000}Apple LiGothic Medium;}{\f188\fnil\fcharset81\fprq2{\*\panose 00020005000000000000}Apple LiSung Light;}{\f189\fnil\fcharset81\fprq2{\*\panose 00020106010001010101}BiauKai;}{\f190\fnil\fcharset81\fprq2 \'c4\'d7\'a7\'ba Pro;}{\f191\fnil\fcharset81\fprq2 \'c4\'d7\'b6\'c2 Pro;}{\f192\fnil\fcharset80\fprq2 GB18030 Bitmap;}{\f193\fnil\fcharset80\fprq2{\*\panose 00020005000000000000}Hei;}{\f194\fnil\fcharset80\fprq2{\*\panose 00020005000000000000}Kai;}{\f195\fnil\fcharset80\fprq2 \'bb\'aa\'ce\'c4\'b7\'c2\'cb\'ce;}{\f196\fnil\fcharset80\fprq2 \'bb\'aa\'ce\'c4\'ba\'da\'cc\'e5;}{\f197\fnil\fcharset80\fprq2 \'bb\'aa\'ce\'c4\'bf\'ac\'cc\'e5;}{\f198\fnil\fcharset80\fprq2 \'bb\'aa\'ce\'c4\'cb\'ce\'cc\'e5;}{\f199\fnil\fcharset80\fprq2 \'bb\'aa\'ce\'c4\'cf\'b8\'ba\'da;}{\f200\fnil\fcharset78\fprq2 \'82l\'82r \'82o\'83S\'83V\'83b\'83N;}{\f201\fnil\fcharset78\fprq2 \'82l\'82r \'82o\'96\'be\'92\'a9;}{\f202\fnil\fcharset78\fprq2{\*\panose 00020b06000000000000}Osaka;}{\f203\fnil\fcharset78\fprq2 Osaka\'81|\'93\'99\'95\'9d;}{\f204\fnil\fcharset78\fprq2 \'83q\'83\'89\'83M\'83m\'8ap\'83S Pro W3;}{\f205\fnil\fcharset78\fprq2 \'83q\'83\'89\'83M\'83m\'8ap\'83S Pro W6;}{\f206\fnil\fcharset78\fprq2 \'83q\'83\'89\'83M\'83m\'8ap\'83S Std W8;}{\f207\fnil\fcharset78\fprq2 \'83q\'83\'89\'83M\'83m\'8a\'db\'83S Pro W4;}{\f208\fnil\fcharset78\fprq2 \'83q\'83\'89\'83M\'83m\'96\'be\'92\'a9 Pro W3;}{\f209\fnil\fcharset78\fprq2 \'83q\'83\'89\'83M\'83m\'96\'be\'92\'a9 Pro W6;}{\f210\fnil\fcharset79\fprq2 #PC\'b8\'ed\'c1\'b6;}{\f211\fnil\fcharset79\fprq2 #\'b1\'c3\'bc\'ad\'c3\'bc;}{\f212\fnil\fcharset79\fprq2 #\'c7\'ca\'b1\'e2\'c3\'bc;}{\f213\fnil\fcharset79\fprq2 #\'c7\'ec\'b5\'e5\'b6\'f3\'c0\'ceA;}{\f214\fnil\fcharset79\fprq2{\*\panose 00020005000000000000}AppleGothic;}{\f215\fnil\fcharset79\fprq2{\*\panose 00020005000000000000}AppleMyungjo;}{\f216\fnil\fcharset79\fprq2 \'b1\'bc\'b8\'b2;}}{\*\ud{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 00020206030504050203}Times New Roman;}{\f1\fnil\fcharset256\fprq2{\*\panose 00020b06040202020202}Arial;}{\f2\fnil\fcharset256\fprq2{\*\panose 00020703090202050204}Courier New;}{\f3\fnil\fcharset2\fprq2{\*\panose 00020005000000000000}Symbol;}{\f4\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Times;}{\f5\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Helvetica;}{\f6\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Courier;}{\f7\fnil\fcharset256\fprq2{\*\panose 00020b05030304040402}Geneva;}{\f8\froman\fcharset77\fprq2{\*\panose 00000000000000000000}Tms Rmn;}{\f9\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}Helv;}{\f10\froman\fcharset77\fprq2{\*\panose 00000000000000000000}MS Serif;}{\f11\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\froman\fcharset77\fprq2{\*\panose 00000000000000000000}New York;}{\f13\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}System;}{\f14\fnil\fcharset2\fprq2{\*\panose 00050201020108040807}Wingdings;}{\f15\fnil\fcharset78\fprq2 \u-211 _\u-205 _ \u26126 _\u26397 _;}{\f16\fnil\fcharset79\fprq2 \u-17388 _\u-12075 _;}{\f17\fnil\fcharset80\fprq2 \u23435 _\u20307 _;}{\f18\fnil\fcharset81\fprq2 \u26032 _\u32048 _\u26126 _\u-25900 _;}{\f19\fnil\fcharset78\fprq2 \u-211 _\u-205 _ \u12468 _\u12471 _\u12483 _\u12463 _;}{\f20\fnil\fcharset256\fprq2{\*\panose 00020406040505050203}Century;}{\f21\fnil\fcharset256\fprq2{\*\panose 00020b06040305040402}Verdana;}{\f22\fnil\fcharset256\fprq2{\*\panose 00020b06040305040402}Tahoma;}{\f23\fnil\fcharset2\fprq2{\*\panose 00010106010101010101}Monotype Sorts;}{\f24\froman\fcharset256\fprq2{\*\panose 00000000000000000000}Timmons{\*\falt Times New Roman};}{\f25\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Nimbus Sans L Condensed{\*\falt Times New Roman};}{\f26\fnil\fcharset256\fprq0{\*\panose 00000000000000000000}DAAAAA+FreeMono;}{\f27\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}FreeMono{\*\falt Times New Roman};}{\f28\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}FreeSans{\*\falt Times New Roman};}{\f29\fnil\fcharset2\fprq0{\*\panose 00000000000000000000}StarSymbol{\*\falt Arial Unicode MS};}{\f30\fswiss\fcharset256\fprq2{\*\panose 00000000000000000000}Helmet{\*\falt Arial};}{\f31\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}HG Mincho Light J{\*\falt MS Mincho};}{\f32\fnil\fcharset256\fprq2 Lucida Grande;}{\f33\fnil\fcharset256\fprq2{\*\panose 00020b0a060301010101}Abadi MT Condensed Extra Bold;}{\f34\fnil\fcharset256\fprq2{\*\panose 00020b03060301010101}Abadi MT Condensed Light;}{\f35\fnil\fcharset256\fprq2{\*\panose 00020000000000000000}Academy Engraved LET;}{\f36\fnil\fcharset256\fprq2{\*\panose 00020906040200040203}American Typewriter;}{\f37\fnil\fcharset256\fprq2{\*\panose 00020906060200040203}American Typewriter Condensed;}{\f38\fnil\fcharset256\fprq2{\*\panose 00020903040200040203}American Typewriter Light;}{\f39\fnil\fcharset256\fprq2{\*\panose 00020b05090000000000}Andale Mono;}{\f40\fnil\fcharset256\fprq2{\*\panose 00030207020405060605}Apple Chancery;}{\f41\fnil\fcharset256\fprq2{\*\panose 00020b0a040201020202}Arial Black;}{\f42\fnil\fcharset256\fprq2{\*\panose 00020b05060202020302}Arial Narrow;}{\f43\fnil\fcharset256\fprq2{\*\panose 00020f07040305040302}Arial Rounded MT Bold;}{\f44\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Bank Gothic;}{\f45\fnil\fcharset256\fprq2{\*\panose 00020205020704010203}Baskerville;}{\f46\fnil\fcharset256\fprq2{\*\panose 00020206020805050203}Baskerville Old Face;}{\f47\fnil\fcharset256\fprq2{\*\panose 00020207020704000202}Baskerville Semibold;}{\f48\fnil\fcharset256\fprq2{\*\panose 0004030905020b02020c}Bauhaus 93;}{\f49\fnil\fcharset256\fprq2{\*\panose 00020205030603050203}Bell MT;}{\f50\fnil\fcharset256\fprq2{\*\panose 00020508060609050204}Bernard MT Condensed;}{\f51\fnil\fcharset256\fprq2{\*\panose 00020006030900000200}Big Caslon;}{\f52\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Blackmoor LET;}{\f53\fnil\fcharset256\fprq2{\*\panose 00000005000000000000}BlairMdITC TT-Medium;}{\f54\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Bodoni Ornaments ITC TT;}{\f55\fnil\fcharset256\fprq2{\*\panose 00000007000000000000}Bodoni SvtyTwo ITC TT-Bold;}{\f56\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Bodoni SvtyTwo ITC TT-Book;}{\f57\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Bodoni SvtyTwo ITC TT-BookIta;}{\f58\fnil\fcharset256\fprq2{\*\panose 00000007000000000000}Bodoni SvtyTwo OS ITC TT-Bold;}{\f59\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Bodoni SvtyTwo OS ITC TT-Book;}{\f60\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Bodoni SvtyTwo OS ITC TT-BookIt;}{\f61\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Bodoni SvtyTwo SC ITC TT-Book;}{\f62\fnil\fcharset256\fprq2{\*\panose 00020406020503050303}Book Antiqua;}{\f63\fnil\fcharset256\fprq2{\*\panose 00020506040505050202}Bookman Old Style;}{\f64\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Bordeaux Roman Bold LET;}{\f65\fnil\fcharset256\fprq2{\*\panose 00000007000000000000}Bradley Hand ITC TT-Bold;}{\f66\fnil\fcharset256\fprq2{\*\panose 0004030b070d0b020204}Braggadocio;}{\f67\fnil\fcharset256\fprq2{\*\panose 00020b09030607030202}Britannic Bold;}{\f68\fnil\fcharset256\fprq2{\*\panose 00030608020404060703}Brush Script MT;}{\f69\fnil\fcharset256\fprq2{\*\panose 00020406030505050303}Calisto MT;}{\f70\fnil\fcharset256\fprq2{\*\panose 00020b05020202020202}Century Gothic;}{\f71\fnil\fcharset256\fprq2{\*\panose 00020406040505050203}Century Schoolbook;}{\f72\fnil\fcharset256\fprq2{\*\panose 00030506020402020202}Chalkboard;}{\f73\fnil\fcharset256\fprq2{\*\panose 00030506020402020202}Chalkboard Bold;}{\f74\fnil\fcharset256\fprq2{\*\panose 00020006030200000200}Cochin;}{\f75\fnil\fcharset256\fprq2{\*\panose 00040208050602020302}Colonna MT;}{\f76\fnil\fcharset256\fprq2{\*\panose 00030f07020303020202}Comic Sans MS;}{\f77\fnil\fcharset256\fprq2{\*\panose 000208090404030b0204}Cooper Black;}{\f78\fnil\fcharset256\fprq2{\*\panose 00020005040000000200}Copperplate;}{\f79\fnil\fcharset256\fprq2{\*\panose 00020e07050202060204}Copperplate Gothic Bold;}{\f80\fnil\fcharset256\fprq2{\*\panose 00020e05070202060204}Copperplate Gothic Light;}{\f81\fnil\fcharset256\fprq2{\*\panose 00020006040300000200}Copperplate Light;}{\f82\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Cracked;}{\f83\fnil\fcharset256\fprq2{\*\panose 00040404040507020202}Curlz MT;}{\f84\fnil\fcharset256\fprq2{\*\panose 0004020505020e030405}Desdemona;}{\f85\fnil\fcharset256\fprq2{\*\panose 00020005030000000200}Didot;}{\f86\fnil\fcharset256\fprq2{\*\panose 00030303020407070d08}Edwardian Script ITC;}{\f87\fnil\fcharset256\fprq2{\*\panose 00020907070805050203}Engravers MT;}{\f88\fnil\fcharset256\fprq2{\*\panose 00020b05030401020201}Euphemia UCAS;}{\f89\fnil\fcharset256\fprq2{\*\panose 00020b08030401020201}Euphemia UCAS Bold;}{\f90\fnil\fcharset256\fprq2{\*\panose 00020b05030401020201}Euphemia UCAS Italic;}{\f91\fnil\fcharset256\fprq2{\*\panose 00020b05040202020502}Eurostile;}{\f92\fnil\fcharset256\fprq2{\*\panose 000204060206030a0203}Footlight MT Light;}{\f93\fnil\fcharset256\fprq2{\*\panose 00020b06020202040203}Futura;}{\f94\fnil\fcharset256\fprq2{\*\panose 00020b05060202040302}Futura Condensed;}{\f95\fnil\fcharset256\fprq2{\*\panose 00020204040303010108}Garamond;}{\f96\fnil\fcharset256\fprq2{\*\panose 00020004000000000000}Geeza Pro;}{\f97\fnil\fcharset256\fprq2{\*\panose 00020007000000000000}Geeza Pro Bold;}{\f98\fnil\fcharset256\fprq2{\*\panose 00020405020504050203}Georgia;}{\f99\fnil\fcharset256\fprq2{\*\panose 00020b05020201040202}Gill Sans;}{\f100\fnil\fcharset256\fprq2{\*\panose 00020b03020201040202}Gill Sans Light;}{\f101\fnil\fcharset256\fprq2{\*\panose 00020b0a020201040202}Gill Sans Ultra Bold;}{\f102\fnil\fcharset256\fprq2{\*\panose 00020308080206010101}Gloucester MT Extra Condensed;}{\f103\fnil\fcharset256\fprq2{\*\panose 00020205020503050203}Goudy Old Style;}{\f104\fnil\fcharset256\fprq2{\*\panose 00020b07060409020602}Haettenschweiler;}{\f105\fnil\fcharset256\fprq2{\*\panose 00020004000000000000}Handwriting - Dakota;}{\f106\fnil\fcharset256\fprq2{\*\panose 0004040505050a020207}Harrington;}{\f107\fnil\fcharset256\fprq2{\*\panose 00020005030000000200}Helvetica Neue;}{\f108\fnil\fcharset256\fprq2{\*\panose 0002000a060000000200}Helvetica Neue Black Condensed;}{\f109\fnil\fcharset256\fprq2{\*\panose 00020008060000000200}Helvetica Neue Bold Condensed;}{\f110\fnil\fcharset256\fprq2{\*\panose 00020004030000000200}Helvetica Neue Light;}{\f111\fnil\fcharset256\fprq2{\*\panose 00020002060000000200}Helvetica Neue UltraLight;}{\f112\fnil\fcharset256\fprq2{\*\panose 00020005050000000200}Herculanum;}{\f113\fnil\fcharset256\fprq2{\*\panose 00020306020505060202}Hoefler Text;}{\f114\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Hoefler Text Ornaments;}{\f115\fnil\fcharset256\fprq2{\*\panose 00020b08060309020502}Impact;}{\f116\fnil\fcharset256\fprq2{\*\panose 00040206050603030302}Imprint MT Shadow;}{\f117\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}InaiMathi;}{\f118\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Jazz LET;}{\f119\fnil\fcharset256\fprq2{\*\panose 00040307050d0c020207}Kino MT;}{\f120\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Lucida Blackletter;}{\f121\fnil\fcharset256\fprq2{\*\panose 00020406020505050203}Lucida Bright;}{\f122\fnil\fcharset256\fprq2{\*\panose 00030101010101010101}Lucida Calligraphy;}{\f123\fnil\fcharset256\fprq2{\*\panose 00020606020505050202}Lucida Fax;}{\f124\fnil\fcharset256\fprq2{\*\panose 00030101010101010101}Lucida Handwriting;}{\f125\fnil\fcharset256\fprq2{\*\panose 00020b06020305040202}Lucida Sans;}{\f126\fnil\fcharset256\fprq2{\*\panose 00020b05090305040302}Lucida Sans Typewriter;}{\f127\fnil\fcharset256\fprq2{\*\panose 00020004000000000000}Marker Felt;}{\f128\fnil\fcharset256\fprq2{\*\panose 00030208020606020702}Matura MT Script Capitals;}{\f129\fnil\fcharset256\fprq2{\*\panose 00030907020304070204}Mistral;}{\f130\fnil\fcharset256\fprq2{\*\panose 00020707040705050203}Modern No. 20;}{\f131\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Mona Lisa Solid ITC TT;}{\f132\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Monaco;}{\f133\fnil\fcharset256\fprq2{\*\panose 00030101010102010101}Monotype Corsiva;}{\f134\fnil\fcharset2\fprq2{\*\panose 00020005000000000000}MT Extra;}{\f135\fnil\fcharset256\fprq2{\*\panose 00020b05040202030202}News Gothic MT;}{\f136\fnil\fcharset256\fprq2{\*\panose 00040506020807020202}Onyx;}{\f137\fnil\fcharset256\fprq2{\*\panose 00020005030600000200}Optima;}{\f138\fnil\fcharset256\fprq2{\*\panose 0002000b030000000200}Optima ExtraBlack;}{\f139\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Palatino;}{\f140\fnil\fcharset256\fprq2{\*\panose 00020b06020402000203}Papyrus;}{\f141\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Party LET;}{\f142\fnil\fcharset256\fprq2{\*\panose 00020205020605050208}Perpetua Titling MT;}{\f143\fnil\fcharset256\fprq2{\*\panose 00020200000000000000}Plantagenet Cherokee;}{\f144\fnil\fcharset256\fprq2{\*\panose 00040506030a06020202}Playbill;}{\f145\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}PortagoITC TT;}{\f146\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Princetown LET;}{\f147\fnil\fcharset256\fprq2{\*\panose 00020606030202050204}Rockwell;}{\f148\fnil\fcharset256\fprq2{\*\panose 00020609030405050204}Rockwell Extra Bold;}{\f149\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Santa Fe LET;}{\f150\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Savoye LET;}{\f151\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}SchoolHouse Cursive B;}{\f152\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}SchoolHouse Printed A;}{\f153\fnil\fcharset256\fprq2{\*\panose 00020d05020202040202}Skia;}{\f154\fnil\fcharset256\fprq2{\*\panose 00020006030800000900}Snell Roundhand;}{\f155\fnil\fcharset256\fprq2{\*\panose 0002000a040900000900}Snell Roundhand Black;}{\f156\fnil\fcharset256\fprq2{\*\panose 00020008030900000900}Snell Roundhand Bold;}{\f157\fnil\fcharset256\fprq2{\*\panose 00040409050d08020204}Stencil;}{\f158\fnil\fcharset256\fprq2{\*\panose 00000007000000000000}Stone Sans ITC TT-Bold;}{\f159\fnil\fcharset256\fprq2{\*\panose 00000006000000000000}Stone Sans ITC TT-Semi;}{\f160\fnil\fcharset256\fprq2{\*\panose 00000006000000000000}Stone Sans ITC TT-SemiIta;}{\f161\fnil\fcharset256\fprq2{\*\panose 00000004000000000000}Synchro LET;}{\f162\fnil\fcharset256\fprq2{\*\panose 00020b06030202020202}Trebuchet MS;}{\f163\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Type Embellishments One LET;}{\f164\fnil\fcharset2\fprq2{\*\panose 00050301020105090607}Webdings;}{\f165\fnil\fcharset256\fprq2{\*\panose 00020a0a070505050204}Wide Latin;}{\f166\fnil\fcharset2\fprq2{\*\panose 00050201020105070707}Wingdings 2;}{\f167\fnil\fcharset2\fprq2{\*\panose 00050401020108070707}Wingdings 3;}{\f168\fnil\fcharset2\fprq2{\*\panose 00050201020107040206}Zapf Dingbats;}{\f169\fnil\fcharset256\fprq2{\*\panose 0003030300040707070c}Zapfino;}{\f170\fnil\fcharset88\fprq2{\*\panose 00020005000000000000}Courier CE;}{\f171\fnil\fcharset88\fprq2{\*\panose 00020b05030304040402}Geneva CE;}{\f172\fnil\fcharset88\fprq2{\*\panose 00020005000000000000}Helvetica CE;}{\f173\fnil\fcharset88\fprq2{\*\panose 00020004000000000000}Krungthep;}{\f174\fnil\fcharset88\fprq2{\*\panose 00020b06000405020202}Lucida Grande CE;}{\f175\fnil\fcharset88\fprq2{\*\panose 00020005000000000000}Monaco CE;}{\f176\fnil\fcharset88\fprq2{\*\panose 00000004000000000000}Silom;}{\f177\fnil\fcharset88\fprq2{\*\panose 00020005000000000000}Times CE;}{\f178\fnil\fcharset89\fprq2{\*\panose 00000004000000000000}Ayuthaya;}{\f179\fnil\fcharset89\fprq2{\*\panose 00000004000000000000}Charcoal CY;}{\f180\fnil\fcharset89\fprq2{\*\panose 00000004000000000000}Geneva CY;}{\f181\fnil\fcharset89\fprq2{\*\panose 00000004000000000000}Helvetica CY;}{\f182\fnil\fcharset89\fprq2{\*\panose 00020b06000405020202}Lucida Grande CY;}{\f183\fnil\fcharset89\fprq2{\*\panose 00020005000000000000}Monaco CY;}{\f184\fnil\fcharset89\fprq2{\*\panose 00000004000000000000}Sathu;}{\f185\fnil\fcharset89\fprq2{\*\panose 00000004000000000000}Thonburi;}{\f186\fnil\fcharset89\fprq2{\*\panose 00020005000000000000}Times CY;}{\f187\fnil\fcharset81\fprq2{\*\panose 00020005000000000000}Apple LiGothic Medium;}{\f188\fnil\fcharset81\fprq2{\*\panose 00020005000000000000}Apple LiSung Light;}{\f189\fnil\fcharset81\fprq2{\*\panose 00020106010001010101}BiauKai;}{\f190\fnil\fcharset81\fprq2 \u20791 _\u23435 _ Pro;}{\f191\fnil\fcharset81\fprq2 \u20791 _\u-24879 _ Pro;}{\f192\fnil\fcharset80\fprq2 GB18030 Bitmap;}{\f193\fnil\fcharset80\fprq2{\*\panose 00020005000000000000}Hei;}{\f194\fnil\fcharset80\fprq2{\*\panose 00020005000000000000}Kai;}{\f195\fnil\fcharset80\fprq2 \u21326 _\u25991 _\u20223 _\u23435 _;}{\f196\fnil\fcharset80\fprq2 \u21326 _\u25991 _\u-24879 _\u20307 _;}{\f197\fnil\fcharset80\fprq2 \u21326 _\u25991 _\u26999 _\u20307 _;}{\f198\fnil\fcharset80\fprq2 \u21326 _\u25991 _\u23435 _\u20307 _;}{\f199\fnil\fcharset80\fprq2 \u21326 _\u25991 _\u32454 _\u-24879 _;}{\f200\fnil\fcharset78\fprq2 \u-211 _\u-205 _ \u-208 _\u12468 _\u12471 _\u12483 _\u12463 _;}{\f201\fnil\fcharset78\fprq2 \u-211 _\u-205 _ \u-208 _\u26126 _\u26397 _;}{\f202\fnil\fcharset78\fprq2{\*\panose 00020b06000000000000}Osaka;}{\f203\fnil\fcharset78\fprq2 Osaka\u8722 _\u31561 _\u24133 _;}{\f204\fnil\fcharset78\fprq2 \u12498 _\u12521 _\u12462 _\u12494 _\u-30254 _\u12468 _ Pro W3;}{\f205\fnil\fcharset78\fprq2 \u12498 _\u12521 _\u12462 _\u12494 _\u-30254 _\u12468 _ Pro W6;}{\f206\fnil\fcharset78\fprq2 \u12498 _\u12521 _\u12462 _\u12494 _\u-30254 _\u12468 _ Std W8;}{\f207\fnil\fcharset78\fprq2 \u12498 _\u12521 _\u12462 _\u12494 _\u20024 _\u12468 _ Pro W4;}{\f208\fnil\fcharset78\fprq2 \u12498 _\u12521 _\u12462 _\u12494 _\u26126 _\u26397 _ Pro W3;}{\f209\fnil\fcharset78\fprq2 \u12498 _\u12521 _\u12462 _\u12494 _\u26126 _\u26397 _ Pro W6;}{\f210\fnil\fcharset79\fprq2 #PC\u-17787 _\u-14224 _;}{\f211\fnil\fcharset79\fprq2 #\u-21119 _\u-16100 _\u-13132 _;}{\f212\fnil\fcharset79\fprq2 #\u-10940 _\u-20944 _\u-13132 _;}{\f213\fnil\fcharset79\fprq2 #\u-10780 _\u-19236 _\u-18564 _\u-14472 _A;}{\f214\fnil\fcharset79\fprq2{\*\panose 00020005000000000000}AppleGothic;}{\f215\fnil\fcharset79\fprq2{\*\panose 00020005000000000000}AppleMyungjo;}{\f216\fnil\fcharset79\fprq2 \u-21132 _\u-17988 _;}}}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red184\green71\blue0;}{\stylesheet{\qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 \snext0 Normal;}{\s1\qj \li0\ri0\sb240\sa60\sl72\slmult0\keepn\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\scaps\f5\fs44\lang2057\langfe255\kerning1\cgrid\langnp2057\langfenp255 \sbasedon0 \snext0 heading 1;}{\s2\qj \li0\ri0\sb240\sa60\sl72\slmult0\keepn\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\scaps\f5\fs36\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext0 heading 2;}{\s3\qj \li0\ri0\sb240\sa60\sl72\slmult0\keepn\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\scaps\f5\fs28\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext0 heading 3;}{\s4\qj \li0\ri0\sb240\sa60\sl72\slmult0\keepn\nowidctlpar\jclisttab\tx0\hyphpar0\aspalpha\aspnum\faauto\ls1\ilvl3\outlinelevel3\adjustright\rin0\lin0\itap0 \b\f28\fs28\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext0 heading 4;}{\s5\qj \li0\ri0\sb144\sa144\sl72\slmult0\keepn\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\outlinelevel4\adjustright\rin0\lin0\itap0 \b\f5\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 Normal Table;}{\*\cs15 \additive \fs18\loch\f29\hich\af29\dbch\f29 Bullets;}{\*\cs16 \additive \ul\cf2 \sbasedon20 Hyperlink;}{\*\cs17 \additive \ul\cf2 \sbasedon20 FollowedHyperlink;}{\*\cs18 \additive WW-Default Paragraph Font;}{\*\cs19 \additive WW-Fuente de p\'87rrafo predeter.;}{\*\cs20 \additive WW-Default Paragraph Font1;}{\*\cs21 \additive \f3 WW8Num1z0;}{\*\cs22 \additive \f3 WW8Num2z0;}{\*\cs23 \additive \fs18\loch\f29\hich\af29\dbch\f29 WW-Bullets;}{\*\cs24 \additive \fs18\loch\f29\hich\af29\dbch\f29 WW-Bullets1;}{\s25\qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs20\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext25 Body Text;}{\s26\qj \li283\ri0\sa120\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin283\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext26 Body Text 2;}{\s27\qj \li0\ri0\sb240\sa120\sl72\slmult0\keepn\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs28\lang2057\langfe255\loch\f30\hich\af30\dbch\f31\cgrid\langnp2057\langfenp255 \sbasedon0 \snext25 Heading;}{\s28\qj \fi-283\li283\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin283\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext28 List;}{\s29\qj \li0\ri0\sb120\sa120\sl72\slmult0\nowidctlpar\noline\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \i\f5\fs20\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext29 caption;}{\s30\qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\noline\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext30 Index;}{\s31\qc \li0\ri0\sb240\sa120\sl72\slmult0\keepn\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs36\lang2057\langfe255\loch\f30\hich\af30\dbch\f31\cgrid\langnp2057\langfenp255 \sbasedon37 \snext32 Title;}{\s32\qc \li0\ri0\sb240\sa120\sl72\slmult0\keepn\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \i\fs28\lang2057\langfe255\loch\f30\hich\af30\dbch\f31\cgrid\langnp2057\langfenp255 \sbasedon37 \snext25 Subtitle;}{\s33\qj \li0\ri0\sa283\sl72\slmult0\nowidctlpar\noline\brdrb\brdrdb\brdrw2\brdrcf15 \hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs12\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext25 Horizontal Line;}{\s34\qj \li0\ri0\sb120\sa120\sl72\slmult0\nowidctlpar\noline\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \i\f5\fs20\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext34 WW-Caption;}{\s35\qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\noline\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext35 WW-Index;}{\s36\qj \li0\ri0\sb240\sa120\sl72\slmult0\keepn\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs28\lang2057\langfe255\loch\f30\hich\af30\dbch\f31\cgrid\langnp2057\langfenp255 \sbasedon0 \snext25 WW-Heading;}{\s37\qj \li0\ri0\sb240\sa120\sl72\slmult0\keepn\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs28\lang2057\langfe255\loch\f30\hich\af30\dbch\f31\cgrid\langnp2057\langfenp255 \sbasedon0 \snext25 WW-Heading1;}{\s38\qj \li0\ri0\sb120\sa120\sl72\slmult0\nowidctlpar\noline\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \i\f5\fs20\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext38 WW-Caption1;}{\s39\qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\noline\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext39 WW-Index1;}{\s40\qj \li283\ri0\sa120\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin283\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext40 WW-List Continue;}{\s41\ql \li0\ri0\sa144\sl100\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext41 WW-Plain Text;}{\s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext42 code;}{\s43\qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\cf11\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext43 Notes to self;}{\s44\qj \fi-283\li566\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin566\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext44 WW-List 2;}{\s45\qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext45 WW-List Bullet 2;}{\s46\qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs20\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon25 \snext46 Byline;}{\s47\qj \li0\ri0\sa283\sl72\slmult0\nowidctlpar\noline\brdrb\brdrdb\brdrw2\brdrcf15 \hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs12\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext25 WW-Horizontal Line;}{\s48\qj \li0\ri0\sa283\sl72\slmult0\nowidctlpar\noline\brdrb\brdrdb\brdrw2\brdrcf15 \hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs12\lang2057\langfe255\cgrid\langnp2057\langfenp255 \sbasedon0 \snext25 WW-Horizontal Line1;}}{\*\listtable{\list\listtemplateid1{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi0\li0\jclisttab\tx0\lin0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi0\li0\jclisttab\tx0\lin0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi0\li0\jclisttab\tx0\lin0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi0\li0\jclisttab\tx0\lin0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi0\li0\jclisttab\tx0\lin0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi0\li0\jclisttab\tx0\lin0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi0\li0\jclisttab\tx0\lin0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi0\li0\jclisttab\tx0\lin0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi0\li0\jclisttab\tx0\lin0 }{\listname ;}\listid1}}{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}{\*\rsidtbl \rsid928906}{\info{\title ENSEMBL COMPARA PERL API TUTORIAL}{\author Abel URETA-VIDAL}{\operator Benoit Ballester}{\creatim\yr2007\mo1\dy31\hr15\min47}{\revtim\yr2007\mo1\dy31\hr15\min47}{\printim\yr2007\mo1\dy31\hr15\min46}{\version2}{\edmins0}{\nofpages12}{\nofwords4986}{\nofchars28421}{\nofcharsws34902}{\vern24961}}\paperw11899\paperh16837 \widowctrl\ftntj\aenddoc\nolead\formshade\horzdoc\dghspace0\dgvspace0\dghorigin0\dgvorigin0\dghshow0\dgvshow0\jexpand\viewkind1\viewscale125\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule\nobrkwrptbl\rsidroot928906 \fet0\sectd \linex0\endnhere\sectlinegrid360\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s31\ql \li0\ri0\sb240\sa120\sl72\slmult0\keepn\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs36\lang2057\langfe255\loch\af30\hich\af30\dbch\f31\cgrid\langnp2057\langfenp255 {\b0\f25\insrsid928906 \hich\af25\dbch\af31\loch\f25 EnsEMBL Compara Perl API Tutorial\par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 By Cara Woodwark, Abel Ureta-Vidal and Javier Herrero\par Revisions: CW Jun 04, AUV Aug 04, Nov 04, JH Nov 04, Abr 05, BB Jan 07\par WARNING: this is a \lquote test\rquote  version. By now this tutorial is \lquote warranty\rquote  work with branch-ensembl-30, and with ensembl databases release 30. As it is a \lquote test\rquote  version, you may find errors. Please email }{\field{\*\fldinst {\insrsid928906 HYPERLINK "mailto:ensembl-dev@ebi.ac.uk"}{\insrsid928906 {\*\datafield 00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b3a0000006d00610069006c0074006f003a0065006e00730065006d0062006c002d0064006500760040006500620069002e00610063002e0075006b000000}}}{\fldrslt {\cs16\ul\cf2\insrsid928906 ensembl-dev@ebi.ac.uk}}}{\insrsid928906 , so that we can correct them. We will be extending/completing this tutorial in the near future.\par {\listtext\tab}}\pard\plain \s4\qj \li0\ri0\sb240\sa60\sl72\slmult0\keepn\nowidctlpar\jclisttab\tx0\hyphpar0\aspalpha\aspnum\faauto\ls1\ilvl3\outlinelevel3\adjustright\rin0\lin0\itap0 \b\f28\fs28\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 Introduction\par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 This tutorial is an introduction to the ensembl compara API. A knowledge of the ensembl core API is presumed, it is assumed that concepts and conventions presented in the ensembl core API tutorial have been assimilated by the user. The ensembl core API tutorial can be found at }{\field{\*\fldinst {\insrsid928906 HYPERLINK "http://www.ensembl.org/Docs/linked_docs/ensembl_tutorial.pdf"}{\insrsid928906 {\*\datafield 00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b7a00000068007400740070003a002f002f007700770077002e0065006e00730065006d0062006c002e006f00720067002f0044006f00630073002f006c0069006e006b00650064005f0064006f00630073002f0065006e00730065006d0062006c005f007400750074006f007200690061006c002e007000640066000000}}}{\fldrslt {\cs16\ul\cf2\insrsid928906 http://www.ensembl.org/Docs/linked_docs/ensembl_tutorial.pdf}}}{\insrsid928906  (in cvs, in ensembl/docs/tutorial/ensembltutorial.pdf) and should be read first as it provides a comprehensive guide to the ensembl environment. \par A documentation about the compara database schema is available at }{\field{\*\fldinst {\insrsid928906 HYPERLINK "http://cvsweb.sanger.ac.uk/cgi-bin/cvsweb.cgi/ensembl-compara/docs/"}{\insrsid928906 {\*\datafield 00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b8800000068007400740070003a002f002f006300760073007700650062002e00730061006e006700650072002e00610063002e0075006b002f006300670069002d00620069006e002f006300760073007700650062002e006300670069002f0065006e00730065006d0062006c002d0063006f006d0070006100720061002f0064006f00630073002f000000}}}{\fldrslt {\cs16\ul\cf2\insrsid928906 http://cvsweb.sanger.ac.uk/cgi-bin/cvsweb.cgi/ensembl-compara/docs/}}}{\insrsid928906  (or in cvs ensembl-compara/docs/docs/schema_doc.html), and while not necessary for this tutorial, an understanding of the database tables may help, as many of the Adaptor modules are table specific.\par {\listtext\tab}}\pard\plain \s4\qj \li0\ri0\sb240\sa60\sl72\slmult0\keepn\nowidctlpar\jclisttab\tx0\hyphpar0\aspalpha\aspnum\faauto\ls1\ilvl3\outlinelevel3\adjustright\rin0\lin0\itap0 \b\f28\fs28\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 Obtaining the code\par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 To use the ensembl compara API, you have the same requirement that when using the ensembl core API i.e. perl 5.6 or later, bioperl 1.2 or later, DBI, DBD::mysql and ensembl core code. Please refer to the ensembl core API tutorial that will tell you everything about these modules, how and where to get them.\par You may start by creating a directory for storing the API in your home directory:\par }\pard\plain \s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 cd\par mkdir src\par cd src\par \par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 In addition, you will need the ensembl compara code that is available by cvs from the ensembl cvs repository using the following cvs commands:\par }\pard\plain \s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 cvs -d :pserver:cvsuser@cvs.sanger.ac.uk:/cvsroot/ensembl login\par \par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 When prompted the password is \lquote CVSUSER\rquote .\par }\pard\plain \s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\dbch\f26\insrsid928906 \hich\af6\dbch\af26\loch\f6 cvs -d :pserver:cvsuser@cvs.sanger.ac.uk:/cvsroot/ensembl co -r branch-ensembl-30 ensembl-compara\par }{\insrsid928906 \par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 This will check out ensembl-compara code for stable branch 30. Make sure the ensembl core code you have already checked out is on the same branch. Note that the branch that is checked out should correspond to the database version being used. Thus ensembl_compara_30 and e.g. homo_sapiens_core_30_35c and mus_musculus_core_30_33f should be used with the above ensembl branch 30 code.\par {\listtext\tab}}\pard\plain \s4\qj \li0\ri0\sb240\sa60\sl72\slmult0\keepn\nowidctlpar\jclisttab\tx0\hyphpar0\aspalpha\aspnum\faauto\ls1\ilvl3\outlinelevel3\adjustright\rin0\lin0\itap0 \b\f28\fs28\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 Environment Variables\par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 The following }{\f6\insrsid928906 PERL5LIB}{\insrsid928906  environment variables should be set up:\par - under tcsh/csh shell with\par }\pard\plain \s42\ql \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 setenv PERL5LIB $\{PERL5LIB\}:\{HOME\}/src/bioperl-live: \\\par }\pard \s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid928906 $\{HOME\}/src/ensembl/modules:$\{HOME\}/src/ensembl-compara/modules\par \par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 - under bash shell with\par }\pard\plain \s42\ql \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 export PERL5LIB=$\{PERL5LIB\}:\{HOME\}/src/bioperl-live: \\\par }\pard \s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid928906 $\{HOME\}/src/ensembl/modules:$\{HOME\}/src/ensembl-compara/modules\par }\pard \s42\ql \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid928906 \par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 These presume that bioperl and ensembl are in a directory called src set up in your home directory.\par {\listtext\tab}}\pard\plain \s4\qj \li0\ri0\sb240\sa60\sl72\slmult0\keepn\nowidctlpar\jclisttab\tx0\hyphpar0\aspalpha\aspnum\faauto\ls1\ilvl3\outlinelevel3\adjustright\rin0\lin0\itap0 \b\f28\fs28\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 Code Conventions (and unconventions)\par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 Refer to the ensembl core tutorial for a good description of the coding conventions normally used in ensembl. Due to historical accidents, there may be exceptions to these rules in compara.\par {\listtext\tab}}\pard\plain \s4\qj \li0\ri0\sb240\sa60\sl72\slmult0\keepn\nowidctlpar\jclisttab\tx0\hyphpar0\aspalpha\aspnum\faauto\ls1\ilvl3\outlinelevel3\adjustright\rin0\lin0\itap0 \b\f28\fs28\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 Connecting a ensembl compara database\par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 There are two ways to connect to the EnsEMBL Compara database. The old way uses the }{\f6\insrsid928906 Bio::EnsEMBL::Compara::DBSQL::DBAdaptor}{\insrsid928906  explicitely. The new one uses the  }{\f6\insrsid928906 Bio::EnsEMBL::Registry}{\f2\insrsid928906  }{\insrsid928906 module which can read either a global or a specific configuration file.\par }\pard\plain \s5\qj \li0\ri0\sb144\sa144\sl72\slmult0\keepn\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\outlinelevel4\adjustright\rin0\lin0\itap0 \b\f5\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 Explicitely, using the }{\f27\insrsid928906 Bio::EnsEMBL::Compara::DBSQL::DBAdaptor\par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 Ensembl compara data as ensembl core data, is stored in a MySQL relational database. If you want to access a compara database, you will need to connect to it. This is done in exactly the same way as when connecting an ensembl core database, but using a Compara specific DBAdaptor.\par }\pard\plain \s42\ql \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\lang1034\langfe255\langnp1034\insrsid928906 use Bio::EnsEMBL::Compara::DBSQL::DBAdaptor\par \par }{\insrsid928906 my $host = \lquote ensembldb.ensembl.org\rquote ;\par my $user = \lquote anonymous\rquote ;\par my $dbname = \lquote ensembl_compara_30\rquote ;\par \par my $comparadb= new Bio::EnsEMBL::Compara::DBSQL::DBAdaptor (-host\tab => $host,\par \tab \tab \tab \tab \tab \tab \tab \tab -user\tab => $user,\par \tab \tab \tab \tab \tab \tab \tab \tab -dbname => $dbname);\par }\pard \s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid928906 \par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 As for a ensembl core connection, in addition to the parameters provided above, the optional }{\f6\insrsid928906 port}{\f27\insrsid928906 , }{\f6\insrsid928906 driver}{\f27\insrsid928906  }{\insrsid928906 and }{\f6\insrsid928906 pass}{\f27\insrsid928906  }{\insrsid928906 parameters can also be used to specify the TCP connection port, the type of database driver and the password respectively. These values have sensible defaults and can often be omitted.\par }\pard\plain \s5\qj \li0\ri0\sb144\sa144\sl72\slmult0\keepn\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\outlinelevel4\adjustright\rin0\lin0\itap0 \b\f5\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 Implicitely, using the }{\f6\insrsid928906 Bio::EnsEMBL::Registry}{\f27\insrsid928906  }{\insrsid928906 configuration file (recommended)\par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 You will need to have a registry configuration file set up. By default,  it takes the file defined by the }{\f6\insrsid928906 ENSEMBL_REGISTRY}{\insrsid928906  environment variable or the file named }{\f6\insrsid928906 .ensembl_init}{\insrsid928906  in your home directory if the former is not found. Additionally, it is possible to use a specific file (see }{\f6\insrsid928906 perldoc Bio::EnsEMBL::Registry}{\insrsid928906  or later in this document for some examples on how to use a different file). An example of such file can be found in }{\f6\insrsid928906 ensembl/modules/Bio/EnsEMBL/Utils/ensembl_init.example}{\insrsid928906 , and below you have a slightly modified copy of it.\par }\pard\plain \s48\qj \li0\ri0\sa283\sl72\slmult0\nowidctlpar\noline\brdrb\brdrdb\brdrw2\brdrcf15 \hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs12\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 \par }\pard\plain \s42\ql \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\b\fs18\cf17\insrsid928906 # Example of configuration file used by Bio::EnsEMBL::Registry::load_all\par # method to store/register all kind of Adaptors.\par }{\b\insrsid928906 \par }\pard \s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\b\insrsid928906 use strict}{\insrsid928906 ;\par }\pard \s42\ql \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\b\insrsid928906 use}{\insrsid928906  Bio::EnsEMBL::Utils::ConfigRegistry;\par }{\b\lang1034\langfe255\langnp1034\insrsid928906 use}{\lang1034\langfe255\langnp1034\insrsid928906  Bio::EnsEMBL::DBSQL::DBAdaptor;\par }{\b\lang1034\langfe255\langnp1034\insrsid928906 use}{\lang1034\langfe255\langnp1034\insrsid928906  Bio::EnsEMBL::Compara::DBSQL::DBAdaptor;\par \par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 @aliases}{\insrsid928906 ;\par  \par }{\b\insrsid928906 new}{\insrsid928906  Bio::EnsEMBL::DBSQL::DBAdaptor(-host => '}{\cf11\insrsid928906 ensembldb.ensembl.org}{\insrsid928906 ',\par                                    -user => '}{\cf11\insrsid928906 anonymous}{\insrsid928906 ',\par                                    -port => }{\b\cf2\insrsid928906 3306}{\insrsid928906 ,\par                                    -species => '}{\cf11\insrsid928906 Homo sapiens}{\insrsid928906 ',\par                                    -group => '}{\cf11\insrsid928906 core}{\insrsid928906 ',\par                                    }{\lang1034\langfe255\langnp1034\insrsid928906 -dbname => '}{\cf11\lang1034\langfe255\langnp1034\insrsid928906 homo_sapiens_core_30_35c}{\lang1034\langfe255\langnp1034\insrsid928906 ');\par \par }{\cf2\lang1034\langfe255\langnp1034\insrsid928906 @aliases}{\lang1034\langfe255\langnp1034\insrsid928906  = ('}{\cf11\lang1034\langfe255\langnp1034\insrsid928906 H_Sapiens}{\lang1034\langfe255\langnp1034\insrsid928906 ', '}{\cf11\lang1034\langfe255\langnp1034\insrsid928906 homo sapiens}{\lang1034\langfe255\langnp1034\insrsid928906 ', '}{\cf11\lang1034\langfe255\langnp1034\insrsid928906 Homo_Sapiens}{\lang1034\langfe255\langnp1034\insrsid928906 ','}{\cf11\lang1034\langfe255\langnp1034\insrsid928906 Homo_sapiens}{\lang1034\langfe255\langnp1034\insrsid928906 ', '}{\cf11\lang1034\langfe255\langnp1034\insrsid928906 Homo}{\lang1034\langfe255\langnp1034\insrsid928906 ', '}{\cf11\lang1034\langfe255\langnp1034\insrsid928906 homo}{\lang1034\langfe255\langnp1034\insrsid928906 ', '}{\cf11\lang1034\langfe255\langnp1034\insrsid928906 human}{\lang1034\langfe255\langnp1034\insrsid928906 ');\par \par Bio::EnsEMBL::Utils::ConfigRegistry->add_alias(-species => "}{\cf11\lang1034\langfe255\langnp1034\insrsid928906 Homo sapiens}{\lang1034\langfe255\langnp1034\insrsid928906 ",\par                                                -alias => }{\b\lang1034\langfe255\langnp1034\insrsid928906 \\}{\cf2\lang1034\langfe255\langnp1034\insrsid928906 @aliases}{\lang1034\langfe255\langnp1034\insrsid928906 );\par \par \par }{\b\lang1034\langfe255\langnp1034\insrsid928906 new}{\lang1034\langfe255\langnp1034\insrsid928906  Bio::EnsEMBL::DBSQL::DBAdaptor(-host => '}{\cf11\lang1034\langfe255\langnp1034\insrsid928906 ensembldb.ensembl.org}{\lang1034\langfe255\langnp1034\insrsid928906 ',\par                                    }{\insrsid928906 -user => '}{\cf11\insrsid928906 anonymous}{\insrsid928906 ',\par                                    -port => }{\b\cf2\insrsid928906 3306}{\insrsid928906 ,\par                                    -species => '}{\cf11\insrsid928906 Mus musculus}{\insrsid928906 ',\par                                    -group => '}{\cf11\insrsid928906 core}{\insrsid928906 ',\par                                    -dbname => '}{\cf11\insrsid928906 mus_musculus_core_30_33f}{\insrsid928906 ');\par \par }{\cf2\insrsid928906 @aliases}{\insrsid928906  = ('}{\cf11\insrsid928906 M_Musculus}{\insrsid928906 ', '}{\cf11\insrsid928906 mus musculus}{\insrsid928906 ', '}{\cf11\insrsid928906 Mus_Musculus'}{\insrsid928906 ,'}{\cf11\insrsid928906 Mus_musculus}{\insrsid928906 ', '}{\cf11\insrsid928906 Mus}{\insrsid928906 ', '}{\cf11\insrsid928906 mus}{\insrsid928906 ', '}{\cf11\insrsid928906 mouse}{\insrsid928906 ');\par \par Bio::EnsEMBL::Utils::ConfigRegistry->add_alias(-species => "}{\cf11\insrsid928906 Mus musculus}{\insrsid928906 ",\par                                                -alias => }{\b\insrsid928906 \\}{\cf2\insrsid928906 @aliases}{\insrsid928906 );\par \par }{\b\insrsid928906 new}{\insrsid928906  Bio::EnsEMBL::DBSQL::DBAdaptor(-host => '}{\cf11\insrsid928906 ensembldb.ensembl.org}{\insrsid928906 ',\par                                    -user => '}{\cf11\insrsid928906 anonymous}{\insrsid928906 ',\par                                    -port => }{\b\cf2\insrsid928906 3306}{\insrsid928906 ,\par                                    -species => '}{\cf11\insrsid928906 Fugu rubripes}{\insrsid928906 ',\par                                    -group => '}{\cf11\insrsid928906 core}{\insrsid928906 ',\par                                    -dbname => '}{\cf11\insrsid928906 fugu_rubripes_core_30_2e}{\insrsid928906 ');\par \par }{\cf2\insrsid928906 @aliases}{\insrsid928906  = ('}{\cf11\insrsid928906 F_Rubripes}{\insrsid928906 ', '}{\cf11\insrsid928906 fugu rubripes}{\insrsid928906 ', '}{\cf11\insrsid928906 Fugu_Rubripes}{\insrsid928906 ','}{\cf11\insrsid928906 Fugu_rubripes}{\insrsid928906 ', '}{\cf11\insrsid928906 Fugu}{\insrsid928906 ', 'fugu');\par \par Bio::EnsEMBL::Utils::ConfigRegistry->add_alias(-species => "}{\cf11\insrsid928906 Fugu rubripes}{\insrsid928906 ",\par                                                -alias => }{\b\insrsid928906 \\}{\cf2\insrsid928906 @aliases}{\insrsid928906 );\par \par }{\b\insrsid928906 new}{\insrsid928906  Bio::EnsEMBL::Compara::DBSQL::DBAdaptor(-host => '}{\cf11\insrsid928906 ensembldb.ensembl.org}{\insrsid928906 ',\par                                             -user => '}{\cf11\insrsid928906 anonymous}{\insrsid928906 ',\par                                             -port => }{\b\cf2\insrsid928906 3306}{\insrsid928906 ,\par                                             -species => '}{\cf11\insrsid928906 Compara30}{\insrsid928906 ',\par                                             -dbname => '}{\cf11\insrsid928906 ensembl_compara_30}{\insrsid928906 ');\par \par }{\cf2\insrsid928906 @aliases}{\insrsid928906  = ('}{\cf11\insrsid928906 ensembl_compara_30}{\insrsid928906 ', '}{\cf11\insrsid928906 compara30}{\insrsid928906 ', '}{\cf11\insrsid928906 compara}{\insrsid928906 ');\par \par Bio::EnsEMBL::Utils::ConfigRegistry->add_alias(-species => "}{\cf11\insrsid928906 Compara30}{\insrsid928906 ",\par                                                -alias => }{\b\insrsid928906 \\}{\cf2\insrsid928906 @aliases}{\insrsid928906 );\par \par }{\b\cf2\insrsid928906 1}{\insrsid928906 ;\par }\pard\plain \s48\qj \li0\ri0\sa283\sl72\slmult0\nowidctlpar\noline\brdrb\brdrdb\brdrw2\brdrcf15 \hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs12\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 \par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 In this configuration file, you can list all the parameters needed to connect a compara database. The compara database is a multi-species database that contains comparative genomic information on all ensembl species. One should then be able not only to connect to a compara database but also to every species ensembl core database. The use of the registry configuration file lets you the freedom to list connection parameters for all ensembl core databases you might need to access in relation to ensembl compara data (in our example, only 3 are mentioned, human, mouse and fugu). All this information is then in a single central place, easy to maintain (modify and update).\par The access to database adaptor is done using either the main species alias (specified by the }{\f6\insrsid928906 -species}{\insrsid928906  parameter) or one of the aliases specified (in the }{\f6\insrsid928906 @aliases}{\insrsid928906  array). No need to remember the complete database name, one of the aliases will be enough.\par WARNING: In previous version of this tutorial, an additional parameter }{\f6\insrsid928906 disconnect_when_inactive => 1}{\insrsid928906  was specified for all ensembl core databases. It is not needed anymore, as there is now a lazy connection in place i.e. connection will be established only at your first }{\f6\insrsid928906 prepare}{\f27\insrsid928906  }{\insrsid928906 statement and kept alive until you use a }{\f6\insrsid928906 disconnect_if_idle}{\f2\insrsid928906  }{\insrsid928906 (or a more drastic }{\f6\insrsid928906 disconnect}{\insrsid928906 ). If you want to use }{\f6\insrsid928906 disconnect_when_inactive}{\insrsid928906  make sure you know what you are doing.\par }\pard\plain \s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 \par }{\f5\fs20\insrsid928906 Below is a non exhaustive list of ensembl compara adaptors that are most often used\par }\pard \s42\ql \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid928906 GenomeDBAdaptor\tab \tab }{\f5\fs20\insrsid928906 to fetch}{\insrsid928906  Bio::EnsEMBL::Compara::GenomeDB }{\f5\fs20\insrsid928906 objects\par }{\insrsid928906 DnaFragAdaptor\tab \tab \tab }{\f5\fs20\insrsid928906 to fetch}{\insrsid928906  Bio::EnsEMBL::Compara::DnaFrag }{\f5\fs20\insrsid928906 objects\par }{\insrsid928906 GenomicAlignBlockAdaptor\tab }{\f5\fs20\insrsid928906 to fetch}{\insrsid928906  Bio::EnsEMBL::Compara::GenomicAlignBlock }{\f5\fs20\insrsid928906 objects\par }{\insrsid928906 DnaAlignFeatureAdaptor\tab }{\f5\fs20\insrsid928906 to fetch}{\insrsid928906  Bio::EnsEMBL::DnaDnaAlignFeature }{\f5\fs20\insrsid928906 objects \par }\pard \s42\ql \fi720\li2160\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin2160\itap0 {\f5\fs20\insrsid928906 (note that this adaptor return a ensembl core object)\par }\pard \s42\ql \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid928906 SyntenyAdaptor\tab \tab \tab }{\f5\fs20\insrsid928906 to fetch}{\insrsid928906  Bio::EnsEMBL::Compara::SyntenyRegion }{\f5\fs20\insrsid928906 objects\par }{\insrsid928906 MemberAdaptor\tab \tab \tab }{\f5\fs20\insrsid928906 to fetch}{\insrsid928906  Bio::EnsEMBL::Compara::Member }{\f5\fs20\insrsid928906 objects}{\insrsid928906  \par HomologyAdaptor\tab \tab }{\f5\fs20\insrsid928906 to fetch}{\insrsid928906  Bio::EnsEMBL::Compara::Homology }{\f5\fs20\insrsid928906 objects\par }{\insrsid928906 FamilyAdaptor\tab \tab \tab }{\f5\fs20\insrsid928906 to fetch}{\insrsid928906  Bio::EnsEMBL::Compara::Family }{\f5\fs20\insrsid928906 objects\par }{\insrsid928906 PeptideAlignFeatureAdaptor\tab }{\f5\fs20\insrsid928906 to fetch}{\insrsid928906  Bio::EnsEMBL::Compara::PeptideAlignFeature\par }\pard \s42\ql \fi720\li2160\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin2160\itap0 {\f5\fs20\insrsid928906 objects\par }\pard \s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f5\insrsid928906 \par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 Only some of these adaptors will be used for illustration as part of this tutorial through commented perl scripts code.\par {\listtext\tab}}\pard\plain \s4\qj \li0\ri0\sb240\sa60\sl72\slmult0\keepn\nowidctlpar\jclisttab\tx0\hyphpar0\aspalpha\aspnum\faauto\ls1\ilvl3\outlinelevel3\adjustright\rin0\lin0\itap0 \b\f28\fs28\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 Whole Genome Alignments\par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 The compara database contains a number of different types of whole genome alignments. A listing about what are these different types can be found in the }{\lang1033\langfe255\langnp1033\insrsid928906 ensembl-compara/docs/schema_doc.html document in method_link section.\par }{\insrsid928906 The whole genome comparisons can be accessed through the API by 2 different ways using of the 2 different adaptors. Specifically, the DnaAlignFeatureAdaptor, which returns DnaDnaAlignFeatures objects (only used for pairwise alignment) and the GenomicAlignBlockAdaptor, which returns GenomicAlignBlock objects (can be used for pairwise and also multiple alignments).\par }\pard\plain \s5\qj \li0\ri0\sb144\sa144\sl72\slmult0\keepn\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\outlinelevel4\adjustright\rin0\lin0\itap0 \b\f5\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 DnaDnaAlignFeature objects (for pairwise alignments only)\par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 Below it is a simple commented perl script to illustrate the use of DnaDnaAlignFeature objects.\par }\pard\plain \s48\qj \li0\ri0\sa283\sl72\slmult0\nowidctlpar\noline\brdrb\brdrdb\brdrw2\brdrcf15 \hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs12\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 \par }\pard\plain \s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\b\insrsid928906 use strict}{\insrsid928906 ;\par }\pard \s42\ql \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\b\insrsid928906 use }{\insrsid928906 Bio::EnsEMBL::Registry;\par }{\b\lang1034\langfe255\langnp1034\insrsid928906 use }{\lang1034\langfe255\langnp1034\insrsid928906 Bio::EnsEMBL::Compara::DBSQL::DBAdaptor; \par }{\b\insrsid928906 use }{\insrsid928906 Bio::AlignIO;\par }{\b\insrsid928906 use }{\insrsid928906 Bio::LocatableSeq;\par }{\b\insrsid928906 use }{\insrsid928906 Getopt::Long;\par \par }{\b\insrsid928906 my }{\cf2\insrsid928906 $usage}{\insrsid928906  = "\par }{\cf2\insrsid928906 $0\par }{\cf11\insrsid928906   [--help]                      this menu\par    --dbname string              (e.g. compara23) one of the compara database\par                                 Bio::EnsEMBL::Registry aliases\par    --seq_region string          (e.g. 22)\par    --seq_region_start integer   (e.g. 50000000)\par    --seq_region_end integer     (e.g. 50500000)\par    --qy string                  (e.g. human) the query species (i.e. a\par                                 Bio::EnsEMBL::Registry alias) from which alignments\par                                 are queried and seq_region refer to\par    --tg string                  (e.g. mouse) the target sepcies (i.e. a\par                                 Bio::EnsEMBL::Registry alias) to which alignments are\par                                 queried\par   [--alignment_type string]     (e.g. TRANSLATED_BLAT) type of alignment stored\par                                 (default: BLASTZ_NET)\par   [--tsl]                       print out a translated alignment\par   [--oo]                        By default, the alignments are dumped so that the --qy\par                                 species sequence is always on forward strand. --oo is\par                                 mostly useful in association with -tsl option, when a\par                                 full translated alignment program has been used e.g \par                                 TRANSLATED_BLAT, and allow to obtain the right \par                                 translation phase. So the --qy species sequence might\par                                 be reverse complemented.\par   [--ft string]                 alignment format, available in bioperl Bio::AlignIO\par                                 (default: clustalw)\par   [--uc]                        print out sequence in upper cases (default is lower\par                                 cases)\par   [--limit integer]             (e.g. 2) limit the output to the number of alignments\par                                 specified\par   [--reg_conf filepath]         the Bio::EnsEMBL::Registry configuration file. If none\par                                 given, the one set in ENSEMBL_REGISTRY will be used if\par                                 defined, if not ~/.ensembl_init will be used.\par \par \\n}{\insrsid928906 ";\par \par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $dbname}{\insrsid928906 ;\par }{\b\insrsid928906 my}{\insrsid928906  (}{\cf2\insrsid928906 $seq_region}{\insrsid928906 ,}{\cf2\insrsid928906 $seq_region_start}{\insrsid928906 ,}{\cf2\insrsid928906 $seq_region_end}{\insrsid928906 );\par }{\b\insrsid928906 my }{\insrsid928906 (}{\cf2\insrsid928906 $qy_species}{\insrsid928906 ,}{\cf2\insrsid928906 $tg_species}{\insrsid928906 );\par }{\b\insrsid928906 my }{\cf2\insrsid928906 $help}{\insrsid928906  = }{\b\cf2\insrsid928906 0}{\insrsid928906 ;\par }{\b\insrsid928906 my }{\cf2\insrsid928906 $alignment_type}{\insrsid928906  = "}{\cf11\insrsid928906 BLASTZ_NET}{\insrsid928906 ";\par }{\b\insrsid928906 my }{\cf2\insrsid928906 $limit}{\insrsid928906 ;\par }{\b\insrsid928906 my }{\cf2\insrsid928906 $reg_conf}{\insrsid928906 ;\par }{\b\insrsid928906 my }{\cf2\insrsid928906 $format}{\insrsid928906  = "}{\cf11\insrsid928906 clustalw}{\insrsid928906 ";\par }{\b\insrsid928906 my }{\cf2\insrsid928906 $translated}{\insrsid928906  =}{\cf2\insrsid928906  }{\b\cf2\insrsid928906 0}{\insrsid928906 ;\par }{\b\insrsid928906 my }{\cf2\insrsid928906 $uc}{\insrsid928906  = }{\b\cf2\insrsid928906 0}{\insrsid928906 ; \par }{\b\insrsid928906 my }{\cf2\insrsid928906 $original_orientation}{\insrsid928906  = }{\b\cf2\insrsid928906 0}{\insrsid928906 ;\par \par }{\b\insrsid928906 unless }{\insrsid928906 (}{\b\insrsid928906 scalar }{\cf2\insrsid928906 @ARGV}{\insrsid928906 ) }{\b\insrsid928906 \{\par }{\insrsid928906   }{\b\lang1036\langfe255\langnp1036\insrsid928906 print }{\cf2\lang1036\langfe255\langnp1036\insrsid928906 $usage}{\lang1036\langfe255\langnp1036\insrsid928906 ;\par   }{\b\lang1036\langfe255\langnp1036\insrsid928906 exit }{\b\cf2\lang1036\langfe255\langnp1036\insrsid928906 0}{\lang1036\langfe255\langnp1036\insrsid928906 ;\par }{\b\insrsid928906 \}\par }{\insrsid928906 \par GetOptions('}{\cf11\insrsid928906 help}{\insrsid928906 ' => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $help}{\insrsid928906 ,\par \tab    '}{\cf11\insrsid928906 dbname=s}{\insrsid928906 ' => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $dbname}{\insrsid928906 ,\par \tab    '}{\cf11\insrsid928906 seq_region=s}{\insrsid928906 ' => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $seq_region}{\insrsid928906 ,\par \tab    '}{\cf11\insrsid928906 seq_region_start=i}{\insrsid928906 ' => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $seq_region_start}{\insrsid928906 ,\par \tab    '}{\cf11\insrsid928906 seq_region_end=i}{\insrsid928906 ' => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $seq_region_end}{\insrsid928906 ,\par \tab    '}{\cf11\insrsid928906 qy=s}{\insrsid928906 ' => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $qy_species}{\insrsid928906 ,\par \tab    '}{\cf11\insrsid928906 tg=s}{\insrsid928906 ' => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $tg_species}{\insrsid928906 ,\par \tab    '}{\cf11\insrsid928906 alignment_type=s}{\insrsid928906 ' => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $alignment_type}{\insrsid928906 ,\par            '}{\cf11\insrsid928906 tsl}{\insrsid928906 ' => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $translated}{\insrsid928906 ,\par            '}{\cf11\insrsid928906 ft=s}{\insrsid928906 ' => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $format}{\insrsid928906 ,\par            '}{\cf11\insrsid928906 uc}{\insrsid928906 ' => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $uc}{\insrsid928906 , \par            '}{\cf11\insrsid928906 oo}{\insrsid928906 ' => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $original_orientation}{\insrsid928906 ,\par            '}{\cf11\insrsid928906 limit=i}{\insrsid928906 ' => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $limit}{\insrsid928906 ,\par            '}{\cf11\insrsid928906 reg_conf=s}{\insrsid928906 ' => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $reg_conf}{\insrsid928906 );\par \par }{\b\insrsid928906 $|}{\insrsid928906 =}{\b\cf2\insrsid928906 1}{\insrsid928906 ;\par \par }{\b\insrsid928906 if }{\insrsid928906 (}{\cf2\insrsid928906 $help}{\insrsid928906 ) }{\b\insrsid928906 \{\par   print }{\cf2\insrsid928906 $usage}{\insrsid928906 ;\par   }{\b\insrsid928906 exit }{\b\cf2\insrsid928906 0}{\insrsid928906 ;\par }{\b\insrsid928906 \}\par }{\insrsid928906 \par }{\b\fs18\cf17\insrsid928906 # Setting up Bio::EnsEMBL::Regitry\par # if $reg_conf is undef, ~/.ensembl_init will be loaded if it exists\par \par }{\insrsid928906 Bio::EnsEMBL::Registry->load_all(}{\cf2\insrsid928906 $reg_conf}{\insrsid928906 );\par \par }{\cf2\lang1036\langfe255\langnp1036\insrsid928906 $format}{\lang1036\langfe255\langnp1036\insrsid928906  = }{\b\lang1036\langfe255\langnp1036\insrsid928906 lc }{\cf2\lang1036\langfe255\langnp1036\insrsid928906 $format}{\lang1036\langfe255\langnp1036\insrsid928906 ;\par }{\cf17\lang1036\langfe255\langnp1036\insrsid928906 \par }{\b\fs18\cf17\insrsid928906 # Getting the core SliceAdaptor for the query species\par \par }{\b\insrsid928906 my }{\cf2\insrsid928906 $qy_sa}{\insrsid928906  = Bio::EnsEMBL::Registry->get_adaptor(}{\cf2\insrsid928906 $qy_species}{\insrsid928906 ,'}{\cf11\insrsid928906 core}{\insrsid928906 ','}{\cf11\insrsid928906 Slice}{\insrsid928906 ');\par }{\b\fs18\cf17\insrsid928906 \par # Fetching a Slice. In compara, all slices are \lquote toplevel\rquote  coordinate system.\par \par }{\b\insrsid928906 my }{\cf2\insrsid928906 $qy_slice}{\insrsid928906  = }{\cf2\insrsid928906 $qy_sa}{\insrsid928906 ->fetch_by_region('}{\cf11\insrsid928906 toplevel}{\insrsid928906 ',}{\cf2\insrsid928906 $seq_region}{\insrsid928906 ,\par                                        }{\cf2\insrsid928906 $seq_region_start}{\insrsid928906 ,}{\cf2\insrsid928906 $seq_region_end}{\insrsid928906 );\par }{\cf17\insrsid928906 \par }{\b\fs18\cf17\insrsid928906 # Getting the core MetaContainer adaptor for the target species\par \par }{\b\insrsid928906 my }{\cf2\insrsid928906 $tg_mc}{\insrsid928906  = Bio::EnsEMBL::Registry->get_adaptor(}{\cf2\insrsid928906 $tg_species}{\insrsid928906 ,'}{\cf11\insrsid928906 core}{\insrsid928906 ','}{\cf11\insrsid928906 MetaContainer}{\insrsid928906 ');\par }{\cf17\insrsid928906 \par }{\b\fs18\cf17\insrsid928906 # Getting a Bio::Species object and from it the Species genus (e.g. Mus\par # musculus) of the target species, using the binomial call\par }{\b\fs18\insrsid928906 \par }{\b\insrsid928906 my }{\cf2\insrsid928906 $tg_binomial}{\insrsid928906  = }{\cf2\insrsid928906 $tg_mc}{\insrsid928906 ->get_Species->binomial;\par \par }{\b\fs18\cf17\insrsid928906 # Getting the compara DnaAlignFeatureAdaptor to query the compara database\par }{\b\fs18\insrsid928906 \par }{\b\insrsid928906 my }{\cf2\insrsid928906 $dafad}{\insrsid928906  = Bio::EnsEMBL::Registry->get_adaptor(}{\cf2\insrsid928906 $dbname}{\insrsid928906 ,'}{\cf11\insrsid928906 compara}{\insrsid928906 ','}{\cf11\insrsid928906 DnaAlignFeature}{\insrsid928906 ');\par \par }{\b\fs18\cf17\insrsid928906 # Fetching DnaDnaAlignFeatures object (these are core objects) using the\par # fetch_all_by_Slice. The 3rd argument that can specify the assembly version\par # can be undef. The compara API will find for you the default assembly for\par # the target species.\par }{\b\fs18\insrsid928906 \par }{\b\insrsid928906 my }{\cf2\insrsid928906 $DnaDnaAlignFeatures}{\insrsid928906  = \par }{\cf2\insrsid928906 $dafad}{\insrsid928906 ->fetch_all_by_Slice(}{\cf2\insrsid928906 $qy_slice}{\insrsid928906 ,}{\cf2\insrsid928906 $tg_binomial}{\insrsid928906 ,undef,}{\cf2\insrsid928906 $alignment_type}{\insrsid928906 ,}{\cf2\insrsid928906 $limit}{\insrsid928906 );\par \par }{\b\fs18\cf17\insrsid928906 # Go through each alignment to print out in the requested format\par }{\b\fs18\insrsid928906 \par }{\b\insrsid928906 foreach my }{\cf2\insrsid928906 $ddaf }{\insrsid928906 (}{\b\insrsid928906 sort \{}{\cf2\insrsid928906 $a}{\insrsid928906 ->start <=> }{\cf2\insrsid928906 $b}{\insrsid928906 ->start \par                           || }{\cf2\insrsid928906 $a}{\insrsid928906 ->end <=> }{\cf2\insrsid928906 $b}{\insrsid928906 ->end}{\b\insrsid928906 \}}{\insrsid928906  \par                   }{\b\insrsid928906 @\{}{\cf2\insrsid928906 $DnaDnaAlignFeatures}{\b\insrsid928906 \}}{\insrsid928906 ) }{\b\insrsid928906 \{\par }{\insrsid928906 \par }{\b\fs18\insrsid928906   }{\b\fs18\cf17\insrsid928906 # if the original alignment strand orientation is requested\par   # ($original_orientation is true) and effectively the alignment obtained\par   # is reverse complement from the originally obtained by the alignment\par   # program used (if $ddaf->strands_reversed is true), then reverse\par   # complement the alignment.\par }{\fs18\insrsid928906 \par   }{\b\fs18\insrsid928906 if}{\fs18\insrsid928906  (}{\fs18\cf2\insrsid928906 $original_orientation}{\fs18\insrsid928906  && }{\fs18\cf2\insrsid928906 $ddaf}{\fs18\insrsid928906 ->strands_reversed) }{\b\fs18\insrsid928906 \{\par }{\fs18\insrsid928906     }{\fs18\cf2\insrsid928906 $ddaf}{\fs18\insrsid928906 ->reverse_complement;\par   }{\b\fs18\insrsid928906 \}\par }{\fs18\insrsid928906 \par }{\insrsid928906   }{\b\fs18\cf17\insrsid928906 # Create a list of flags to be used in the get_SimpleAlign method call\par \par }{\insrsid928906   }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 @flags}{\insrsid928906 ;\par   }{\b\insrsid928906 push }{\cf2\insrsid928906 @flags}{\insrsid928906 , '}{\cf11\insrsid928906 translated}{\insrsid928906 ' }{\b\insrsid928906 if}{\insrsid928906  (}{\cf2\insrsid928906 $translated}{\insrsid928906 );\par   }{\b\insrsid928906 push }{\cf2\insrsid928906 @flags}{\insrsid928906 , '}{\cf11\insrsid928906 uc}{\insrsid928906 ' }{\b\insrsid928906 if}{\insrsid928906  (}{\cf2\insrsid928906 $uc}{\insrsid928906 );\par   \par }{\b\fs18\insrsid928906   }{\b\fs18\cf17\insrsid928906 # Get a Bio::SimpleAlign from the DnaDnaAlignFeature object\par }{\b\fs18\insrsid928906 \par }{\insrsid928906   }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $sa}{\insrsid928906  = }{\cf2\insrsid928906 $ddaf}{\insrsid928906 ->get_SimpleAlign(}{\cf2\insrsid928906 @flags}{\insrsid928906 );\par   \par }{\b\fs18\insrsid928906   }{\b\fs18\cf17\insrsid928906 # Create a Bio::AlignIO with the requested output format\par }{\b\fs18\insrsid928906 \par }{\insrsid928906   }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $alignIO}{\insrsid928906  = Bio::AlignIO->newFh(-interleaved => }{\b\cf2\insrsid928906 0}{\insrsid928906 ,\par                                     -fh => }{\b\insrsid928906 \\}{\b\cf6\insrsid928906 *STDOUT}{\insrsid928906 ,\par                                     -format => }{\cf2\insrsid928906 $format}{\insrsid928906 ,\par                                     -idlength => }{\b\cf2\insrsid928906 20}{\insrsid928906 );\par \par }{\b\fs18\insrsid928906   }{\b\fs18\cf17\insrsid928906 # print out the alignment (Bio::SimpleAlign object) in the requested\par   # output format through the Bio::AlignIO handler\par }{\insrsid928906 \par   }{\b\lang1036\langfe255\langnp1036\insrsid928906 print }{\cf2\lang1036\langfe255\langnp1036\insrsid928906 $alignIO $sa}{\lang1036\langfe255\langnp1036\insrsid928906 ;\par }{\b\insrsid928906 \}\par \par exit }{\b\cf2\insrsid928906 0}{\insrsid928906 ;\par }\pard\plain \s48\qj \li0\ri0\sa283\sl72\slmult0\nowidctlpar\noline\brdrb\brdrdb\brdrw2\brdrcf15 \hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs12\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 \par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 So to pull out BLASTZ_NET_TIGHT alignments, let\rquote s say on part of ENCODE region ENm004 on human chromosome 22, between position 30184430 and position 30184485, against the mouse genome in clustalw format, we can use know the following command line,\par }\pard\plain \s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 % perl DumpAlignmentsLight.pl --dbname Compara30 --seq_region 22\par --seq_region_start 30184430 --seq_region_end 30184485 --qy human --tg mouse\par --alignment_type BLASTZ_NET_TIGHT\par \par CLUSTAL W(1.81) multiple sequence alignment\par \par \par 22/30184223-30184547   tgaaacgcttgtccttgaagtccctctctcggtctctgtctctcaagtcccgcaggtcct\par 11/3114992-3115316     tgaaacgtttgtccttgtagtccctctctctgtctcggtctctcaagtctcgcaggtcct\par                        ******* ********* ************ ***** ************ **********\par \par \par 22/30184223-30184547   tatcgctaagacggtgatccttctcaaaggtccgggcagagattatcctcccactgccaa\par 11/3114992-3115316     tatcactgagacggtgatccttttcaaaggcccgggcagaaattatccttccactgccaa\par                        **** ** ************** ******* ********* ******** **********\par \par \par 22/30184223-30184547   tcctacgtccaccaagcagacgaagcccatcactatctttctctaatggacttcctgagc\par 11/3114992-3115316     ttcttcgtccaccaagcaggcgaagtccatcactgtctttctccaatggactgccagatc\par                        * ** ************** ***** ******** ******** ******** ** ** *\par \par \par 22/30184223-30184547   gccgggagctaacagcggctgtcacgtggcagccccctccaaagctccgtctctgagggc\par 11/3114992-3115316     gtcgggagctaacagcagctgtcacatggcagccacctccaaagcttcgtctctgtgggc\par                        * ************** ******** ******** *********** ******** ****\par \par \par 22/30184223-30184547   tgagaacaacatctaagtcatcttctttcacacgctctcgtggatctggaaggacgtggg\par 11/3114992-3115316     tgagaacaacatctaagtcatcttctttcactcgctctcgtggatctgaaaagatgccag\par                        ******************************* **************** ** ** *   *\par \par \par 22/30184223-30184547   aaagacaaagttaaacaaaccaaca\par 11/3114992-3115316     aaagagaaaggtaagcaaaccaaca\par                        ***** **** *** **********\par \par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 Now on the same region, TRANSLATED_BLAT alignments against fugu in clustalw format, but at translation level now (-tsl) not nucleotide level, we can run the following command line,\par }\pard\plain \s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 % perl DumpAlignments.pl --dbname Compara30 --seq_region 22 \\\par --seq_region_start 30184430 --seq_region_end 30184485 --qy human --tg fugu \\\par --alignment_type TRANSLATED_BLAT --tsl\par \par CLUSTAL W(1.81) multiple sequence alignment\par \par \par 22/30184431-30184484    aapskapslraenni*vi\par scaffold_2267/1347-1400 tspskaaplwa*yyi*ii\par                         ::****..* *   **:*\par \par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 By default, the alignments will dump with --qy species sequence on forward strand. To make sure that the alignment, you got is on the strand on which it was originally generated using the --oo option will check that and restore the right strandness. See below the difference in the translation level alignment obtained.\par }\pard\plain \s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 % perl DumpAlignments.pl --dbname Compara30 --seq_region 22 \\\par --seq_region_start 30184430 --seq_region_end 30184485 --qy human --tg fugu \\\par --alignment_type TRANSLATED_BLAT --tsl --oo\par \par CLUSTAL W(1.81) multiple sequence alignment\par \par \par 22/30184431-30184484    ddldvvlspqrrsfgggc\par scaffold_2267/1347-1400 ddldvilspqrrsfgggc\par                         *****:************\par \par }\pard\plain \s5\qj \li0\ri0\sb144\sa144\sl72\slmult0\keepn\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\outlinelevel4\adjustright\rin0\lin0\itap0 \b\f5\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 GenomicAlignBlock objects (pairwise/multiple alignments)\par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 GenomicAlignBlocks are the new way to store and fetch genomic alignments. A GenomicAlignBlock contains several GenomicAlign objects. Every GenomicAlign object corresponds to a piece of genomic sequence aligned with the other GenomicAlign in the same GenomicAlignBlock. A GenomicAlign object is always related with other GenomicAlign objects and this relation is defined through the GenomicAlignBlock object. Therefore the usual way to fetch genomic alignments is by fetching GenomicAlignBlock objects. We have to start by getting the corresponding adaptor:\par }\pard\plain \s42\ql \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\b\fs18\insrsid928906 # Getting the GenomicAlignBlock adaptor:\par }{\insrsid928906 my $genomic_align_block_adaptor = Bio::EnsEMBL::Registry->get_adaptor(\par \tab $dbname, 'compara', 'GenomicAlign');\par }{\b\f5\fs18\insrsid928906 \par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 In order to fetch the right alignments we need to specify a couple of data: the type of alignment and the piece of genomic sequence in which we are looking for alignments. The type of alignment is a more tricky now: you need to specify both the alignment method and the set of genomes. In order to simply this task, you could use the new }{\f6\insrsid928906 Bio::EnsEMBL::Compara::MethodLinkSpeciesSet}{\insrsid928906  object. The best way to use them is by fetching them from the database:\par }\pard\plain \s42\ql \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\b\fs18\insrsid928906 # Getting the GenomeDB adaptor:\par }{\insrsid928906 my $genome_db_adaptor = Bio::EnsEMBL::Registry->get_adaptor(\par \tab $dbname, 'compara', 'GenomeDB');\par }{\b\fs18\insrsid928906 # Fetching GenomeDB objects for human and mouse:\par }{\insrsid928906 my $human_genome_db = $genome_db_adaptor->fetch_by_name_asembly('Homo sapiens');\par my $mouse_genome_db = $genome_db_adaptor->fetch_by_name_asembly('Homo sapiens');\par }{\b\fs18\insrsid928906 # Getting the MethodLinkSpeciesSet adaptor:\par }{\insrsid928906 my $method_link_species_set_adaptor = Bio::EnsEMBL::Registry->get_adaptor(\par \tab $dbname, 'compara', 'MethodLinkSpeciesSet');\par }{\b\fs18\insrsid928906 # Fetching the MethodLinkSpeciesSet object corresponding to BLASTZ_NET alignments between human and mouse genomic sequences:\par }{\insrsid928906 my $human_mouse_blastz_net_mlss =\par \tab $method_link_species_set_adaptor->fetch_by_method_link_type_GenomeDBs(\par \tab \tab \ldblquote BLASTZ_NET\rdblquote ,\par \tab \tab [$human_genome_db, $mouse_genome_db]\par \tab );\par }{\f5\insrsid928906 \par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 There are two ways to fetch GenomicAlignBlocks. One is uses }{\f6\insrsid928906 Bio::EnsEMBL::Slice}{\insrsid928906  objects while the second one is based on }{\f6\insrsid928906 Bio::EnsEMBL::Compara::DnaFrag}{\insrsid928906  objects for specifying  the piece of genomic sequence in which we are looking for alignments.\par }\pard\plain \s42\ql \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\b\fs18\insrsid928906 # Getting the Slice adaptor:\par }{\b\insrsid928906 my}{\insrsid928906  $slice_adaptor = Bio::EnsEMBL::Registry->get_adaptor(\par \tab $query_species, 'core', 'Slice');\par }{\b\fs18\insrsid928906 # Fetching a Slice object:\par }{\b\insrsid928906 my}{\insrsid928906  $query_slice = $qy_sa->fetch_by_region('toplevel', $seq_region, $seq_region_start,\par \tab $seq_region_end);\par }{\b\fs18\insrsid928906 # Fetching all the GenomicAlignBlock corresponding to this Slice:\par }{\insrsid928906 my $genomic_align_blocks =\par \tab $genomic_align_block_adaptor->fetch_by_MethodLinkSpeciesSet_Slice(\par \tab \tab $human_mouse_blastz_net_mlss, $query_slice);\par \par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 Here is an example script with all of this:\par }\pard\plain \s48\qj \li0\ri0\sa283\sl72\slmult0\nowidctlpar\noline\brdrb\brdrdb\brdrw2\brdrcf15 \hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs12\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 \par }\pard\plain \s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\b\insrsid928906 use}{\insrsid928906  }{\b\insrsid928906 strict}{\insrsid928906 ;\par }\pard \s42\ql \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\b\insrsid928906 use}{\insrsid928906  Bio::EnsEMBL::Registry;\par }{\b\insrsid928906 use}{\insrsid928906  Bio::EnsEMBL::Utils::Exception }{\b\insrsid928906 qw(}{\cf11\insrsid928906 throw}{\b\insrsid928906 )}{\insrsid928906 ;\par }{\b\insrsid928906 use}{\insrsid928906  Bio::SimpleAlign;\par }{\b\insrsid928906 use}{\insrsid928906  Bio::AlignIO;\par }{\b\insrsid928906 use}{\insrsid928906  Bio::LocatableSeq;\par }{\b\insrsid928906 use}{\insrsid928906  Getopt::Long;\par \par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $usage}{\insrsid928906  = }{\b\insrsid928906 qq\{\par }{\cf11\insrsid928906 perl DumpMultiAlign.pl\par   Getting help:\par     [--help]\par   \par   General configuration:\par     [--reg_conf registry_configuration_file]\par         the Bio::EnsEMBL::Registry configuration file. If none given,\par         the one set in ENSEMBL_REGISTRY will be used if defined, if not\par         ~/.ensembl_init will be used.\par     [--dbname compara_db_name]\par         the name of compara DB in the registry_configuration_file or any\par         of its aliases. Uses "compara" by default.\par \par   For the query slice:\par     [--species species]\par         Query species. Default is "human"\par     [--coord_system coordinates_name]\par         Query coordinate system. Default is "chromosome"\par     --seq_region region_name\par         Query region name, i.e. the chromosome name\par     --seq_region_start start\par     --seq_region_end end\par \par   For the alignments:\par     [--alignment_type method_link_name]\par         The type of alignment. Default is "BLASTZ_NET"\par     [--set_of_species species1:species2:species3:...]\par         The list of species used to get those alignments. Default is\par         "human:mouse". The names should correspond to the name of the\par         core database in the registry_configuration_file or any of its\par         aliases\par \par   Ouput:\par     [--output_format clustalw|fasta|...]\par         The type of output you want. "clustalw" is the default.\par     [--output_file filename]\par         The name of the output file. By default the output is the\par         standard output\par }{\b\insrsid928906 \}}{\insrsid928906 ;\par \par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $reg_conf}{\insrsid928906 ;\par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $dbname }{\insrsid928906 = "}{\cf11\insrsid928906 compara}{\insrsid928906 ";\par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $species}{\insrsid928906  = "}{\cf11\insrsid928906 human}{\insrsid928906 ";\par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $coord_system }{\insrsid928906 = "}{\cf11\insrsid928906 chromosome}{\insrsid928906 ";\par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $seq_region }{\insrsid928906 = "}{\cf11\insrsid928906 14}{\insrsid928906 ";\par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $seq_region_start }{\insrsid928906 = }{\b\cf2\insrsid928906 75000000}{\insrsid928906 ;\par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $seq_region_end}{\insrsid928906  = }{\b\cf2\insrsid928906 75010000}{\insrsid928906 ;\par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $alignment_type }{\insrsid928906 = "}{\cf11\insrsid928906 BLASTZ_NET}{\insrsid928906 ";\par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $set_of_species }{\insrsid928906 = "}{\cf11\insrsid928906 human:mouse}{\insrsid928906 ";\par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $output_file }{\insrsid928906 = }{\b\insrsid928906 undef}{\insrsid928906 ;\par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $output_format}{\insrsid928906  = "}{\cf11\insrsid928906 clustalw}{\insrsid928906 ";\par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $help}{\insrsid928906 ;\par \par GetOptions(\par     "}{\cf11\insrsid928906 help}{\insrsid928906 " => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $help}{\insrsid928906 ,\par     "}{\cf11\insrsid928906 reg_conf=s}{\insrsid928906 " => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $reg_conf}{\insrsid928906 ,\par     "}{\cf11\insrsid928906 dbname=s}{\insrsid928906 " => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $dbname}{\insrsid928906 ,\par     "}{\cf11\insrsid928906 species=s}{\insrsid928906 " => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $species}{\insrsid928906 ,\par     "}{\cf11\insrsid928906 coord_system=s}{\insrsid928906 " => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $coord_system}{\insrsid928906 ,\par     "}{\cf11\insrsid928906 seq_region=s}{\insrsid928906 " => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $seq_region}{\insrsid928906 ,\par     "}{\cf11\insrsid928906 seq_region_start=i}{\insrsid928906 " => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $seq_region_start}{\insrsid928906 ,\par     "}{\cf11\insrsid928906 seq_region_end=i}{\insrsid928906 " => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $seq_region_end}{\insrsid928906 ,\par     "}{\cf11\insrsid928906 alignment_type=s}{\insrsid928906 " => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $alignment_type}{\insrsid928906 ,\par     "}{\cf11\insrsid928906 set_of_species=s}{\insrsid928906 " => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $set_of_species}{\insrsid928906 ,\par     "}{\cf11\insrsid928906 output_format=s}{\insrsid928906 " => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $output_format}{\insrsid928906 ,\par     "}{\cf11\insrsid928906 output_file=s}{\insrsid928906 " => }{\b\insrsid928906 \\}{\cf2\insrsid928906 $output_file}{\insrsid928906 ,\par   );\par \par }{\b\fs18\insrsid928906 # Print Help and exit\par }{\b\insrsid928906 if}{\insrsid928906  (}{\cf2\insrsid928906 $help}{\insrsid928906 ) }{\b\insrsid928906 \{\par }{\insrsid928906   }{\b\insrsid928906 print }{\cf2\insrsid928906 $usage}{\insrsid928906 ;\par   }{\b\insrsid928906 exit}{\insrsid928906 (}{\b\cf2\insrsid928906 0}{\insrsid928906 );\par }{\b\insrsid928906 \}\par }{\insrsid928906 \par }{\b\insrsid928906 if }{\insrsid928906 (}{\cf2\insrsid928906 $output_file}{\insrsid928906 ) }{\b\insrsid928906 \{\par }{\insrsid928906   }{\b\insrsid928906 open}{\insrsid928906 (}{\b\cf6\insrsid928906 STDOUT}{\insrsid928906 , ">}{\cf2\insrsid928906 $output_file}{\insrsid928906 ") }{\b\insrsid928906 or die}{\insrsid928906 ("}{\cf11\insrsid928906 Cannot open }{\cf2\insrsid928906 $output_file}{\insrsid928906 ");\par }{\b\insrsid928906 \}\par }{\insrsid928906 \par }{\b\fs18\cf17\insrsid928906 # Configure the Bio::EnsEMBL::Registry\par # Uses $reg_conf if supllied. Uses ENV\{ENSMEBL_REGISTRY\} instead if defined.\par # Uses ~/.ensembl_init if all the previous fail.\par }{\insrsid928906 Bio::EnsEMBL::Registry->load_all(}{\cf2\insrsid928906 $reg_conf}{\insrsid928906 );\par \par }{\b\fs18\cf17\insrsid928906 # Getting all the Bio::EnsEMBL::Compara::GenomeDB objects\par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $genome_dbs}{\insrsid928906 ;\par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $genome_db_adaptor }{\insrsid928906 = Bio::EnsEMBL::Registry->get_adaptor(}{\cf2\insrsid928906 $dbname}{\insrsid928906 , '}{\cf11\insrsid928906 compara}{\insrsid928906 ',\par \tab '}{\cf11\insrsid928906 GenomeDB}{\insrsid928906 ');\par throw("}{\cf11\insrsid928906 Registry configuration file has no data for connecting to <}{\cf2\insrsid928906 $dbname}{\cf11\insrsid928906 >}{\insrsid928906 ")\par \tab }{\b\insrsid928906 if}{\insrsid928906  (}{\b\insrsid928906 !}{\cf2\insrsid928906 $genome_db_adaptor}{\insrsid928906 );\par }{\b\insrsid928906 foreach my }{\cf2\insrsid928906 $this_species }{\insrsid928906 (}{\b\insrsid928906 split}{\insrsid928906 ("}{\cf11\insrsid928906 :}{\insrsid928906 ", }{\cf2\insrsid928906 $set_of_species}{\insrsid928906 )) }{\b\insrsid928906 \{\par }{\insrsid928906   }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $this_meta_container_adaptor}{\insrsid928906  = Bio::EnsEMBL::Registry->get_adaptor(\par       }{\cf2\insrsid928906 $this_species}{\insrsid928906 , '}{\cf11\insrsid928906 core}{\insrsid928906 ', '}{\cf11\insrsid928906 MetaContainer}{\insrsid928906 ');\par   throw("}{\cf11\insrsid928906 Registry configuration file has no data for connecting to <}{\cf2\insrsid928906 $this_species}{\cf11\insrsid928906 >}{\insrsid928906 ")\par       }{\b\insrsid928906 if}{\insrsid928906  (}{\b\insrsid928906 !}{\cf2\insrsid928906 $this_meta_container_adaptor}{\insrsid928906 );\par   }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $this_binomial_id}{\insrsid928906  = }{\cf2\insrsid928906 $this_meta_container_adaptor}{\insrsid928906 ->get_Species->binomial;\par }{\b\fs18\cf17\insrsid928906   # Fetch Bio::EnsEMBL::Compara::GenomeDB object\par }{\insrsid928906   }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $genome_db}{\insrsid928906  = }{\cf2\insrsid928906 $genome_db_adaptor}{\insrsid928906 ->fetch_by_name_assembly(}{\cf2\insrsid928906 $this_binomial_id}{\insrsid928906 );\par }{\b\fs18\cf17\insrsid928906   # Add Bio::EnsEMBL::Compara::GenomeDB object to the list\par }{\insrsid928906   }{\b\insrsid928906 push}{\insrsid928906 (}{\cf2\insrsid928906 @$genome_dbs}{\insrsid928906 , }{\cf2\insrsid928906 $genome_db}{\insrsid928906 );\par }{\b\insrsid928906 \}\par }{\insrsid928906 \par }{\b\fs18\cf17\insrsid928906 # Getting Bio::EnsEMBL::Compara::MethodLinkSpeciesSet obejct\par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $method_link_species_set_adaptor }{\insrsid928906 = Bio::EnsEMBL::Registry->get_adaptor(\par \tab }{\cf2\insrsid928906 $dbname}{\insrsid928906 , '}{\cf11\insrsid928906 compara}{\insrsid928906 ', '}{\cf11\insrsid928906 MethodLinkSpeciesSet}{\insrsid928906 ');\par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $method_link_species_set}{\insrsid928906  =\par \tab }{\cf2\insrsid928906 $method_link_species_set_adaptor}{\insrsid928906 ->}{\cf1\insrsid928906 fetch_by_method_link_type_GenomeDBs}{\insrsid928906 (\par \tab \tab }{\cf2\insrsid928906 $alignment_type}{\insrsid928906 , }{\cf2\insrsid928906 $genome_dbs}{\insrsid928906 );\par throw("}{\cf11\insrsid928906 The database do not contain any }{\cf2\insrsid928906 $alignment_type}{\insrsid928906  }{\cf11\insrsid928906 data for}{\insrsid928906  }{\cf2\insrsid928906 $set_of_species}{\cf11\insrsid928906 !}{\insrsid928906 ")\par \tab }{\b\insrsid928906 if}{\insrsid928906  (}{\b\insrsid928906 !}{\cf2\insrsid928906 $method_link_species_set}{\insrsid928906 );\par \par }{\b\fs18\cf17\insrsid928906 # Fetching the query Slice:\par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $slice_adaptor }{\insrsid928906 = Bio::EnsEMBL::Registry->get_adaptor(}{\cf2\insrsid928906 $species}{\insrsid928906 , '}{\cf11\insrsid928906 core}{\insrsid928906 ', '}{\cf11\insrsid928906 Slice}{\insrsid928906 ');\par throw("}{\cf11\insrsid928906 Registry configuration file has no data for connecting to <}{\cf2\insrsid928906 $species}{\cf11\insrsid928906 >}{\insrsid928906 ")\par \tab }{\b\insrsid928906 if}{\insrsid928906  (}{\b\insrsid928906 !}{\cf2\insrsid928906 $slice_adaptor}{\insrsid928906 );\par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $query_slice}{\insrsid928906  = }{\cf2\insrsid928906 $slice_adaptor}{\insrsid928906 ->fetch_by_region('}{\cf11\insrsid928906 toplevel}{\insrsid928906 ', }{\cf2\insrsid928906 $seq_region}{\insrsid928906 , }{\cf2\insrsid928906 $seq_region_start}{\insrsid928906 , }{\cf2\insrsid928906 $seq_region_end}{\insrsid928906 );\par throw("}{\cf11\insrsid928906 No Slice can be created with coordinates }{\cf2\insrsid928906 $seq_region}{\cf11\insrsid928906 :}{\cf2\insrsid928906 $seq_region_start}{\cf11\insrsid928906 -}{\insrsid928906 \rdblquote .\par \tab \rdblquote }{\cf2\insrsid928906 $seq_region_end}{\insrsid928906 ") }{\b\insrsid928906 if}{\insrsid928906  (}{\b\insrsid928906 !}{\cf2\insrsid928906 $query_slice}{\insrsid928906 );\par \par }{\b\fs18\cf17\insrsid928906 # Fetching all the GenomicAlignBlock corresponding to this Slice:\par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $genomic_align_block_adaptor}{\insrsid928906  = Bio::EnsEMBL::Registry->get_adaptor(\par     }{\cf2\insrsid928906 $dbname}{\insrsid928906 , '}{\cf11\insrsid928906 compara}{\insrsid928906 ', '}{\cf11\insrsid928906 GenomicAlignBlock}{\insrsid928906 ');\par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $genomic_align_blocks}{\insrsid928906  =\par }{\cf2\insrsid928906     $genomic_align_block_adaptor}{\insrsid928906 ->fetch_all_by_MethodLinkSpeciesSet_Slice(\par         }{\cf2\insrsid928906 $method_link_species_set}{\insrsid928906 , }{\cf2\insrsid928906 $query_slice}{\insrsid928906 );\par \par }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $all_aligns}{\insrsid928906 ;\par }{\b\fs18\cf17\insrsid928906 # Create a Bio::SimpleAlign object from every GenomicAlignBlock \par }{\b\insrsid928906 foreach my}{\insrsid928906  }{\cf2\insrsid928906 $this_genomic_align_block }{\insrsid928906 (}{\cf2\insrsid928906 @$genomic_align_blocks}{\insrsid928906 ) }{\b\insrsid928906 \{\par }{\insrsid928906   }{\b\insrsid928906 my }{\cf2\insrsid928906 $simple_align }{\insrsid928906 = Bio::SimpleAlign->new();\par   }{\cf2\insrsid928906 $simple_align}{\insrsid928906 ->id("}{\cf11\insrsid928906 GAB#}{\insrsid928906 ".}{\cf2\insrsid928906 $this_genomic_align_block}{\insrsid928906 ->dbID);\par   }{\cf2\insrsid928906 $simple_align}{\insrsid928906 ->score(}{\cf2\insrsid928906 $this_genomic_align_block}{\insrsid928906 ->score);\par \par   }{\b\insrsid928906 my }{\cf2\insrsid928906 $all_genomic_aligns }{\insrsid928906 = }{\cf2\insrsid928906 $this_genomic_align_block}{\insrsid928906 ->get_all_GenomicAligns;\par }{\b\fs18\cf17\insrsid928906   # Create a Bio::LocatableSeq object from every GenomicAlign\par }{\insrsid928906   }{\b\insrsid928906 foreach my }{\cf2\insrsid928906 $this_genomic_align }{\insrsid928906 (}{\cf2\insrsid928906 @$all_genomic_aligns}{\insrsid928906 ) }{\b\insrsid928906 \{\par }{\insrsid928906     }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $seq_name }{\insrsid928906 = }{\cf2\insrsid928906 $this_genomic_align}{\insrsid928906 ->dnafrag->genome_db->name;\par     }{\cf2\insrsid928906 $seq_name}{\insrsid928906  =~ }{\cf11\insrsid928906 s/(.)\\w* (.)\\w*/$1$2/}{\insrsid928906 ;\par     }{\cf2\insrsid928906 $seq_name }{\insrsid928906 .= }{\cf2\insrsid928906 $this_genomic_align}{\insrsid928906 ->dnafrag->name;\par     }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $aligned_sequence}{\insrsid928906  = }{\cf2\insrsid928906 $this_genomic_align}{\insrsid928906 ->aligned_sequence;\par     }{\b\insrsid928906 my}{\insrsid928906  }{\cf2\insrsid928906 $seq }{\insrsid928906 = Bio::LocatableSeq->new(\par             -SEQ    => }{\cf2\insrsid928906 $aligned_sequence}{\insrsid928906 ,\par             -START  => }{\cf2\insrsid928906 $this_genomic_align}{\insrsid928906 ->dnafrag_start,\par             -END    => }{\cf2\insrsid928906 $this_genomic_align}{\insrsid928906 ->dnafrag_end,\par             -ID     => }{\cf2\insrsid928906 $seq_name}{\insrsid928906 ,\par             -STRAND => }{\cf2\insrsid928906 $this_genomic_align}{\insrsid928906 ->dnafrag_strand\par         );\par }{\b\fs18\cf17\insrsid928906     # Add this Bio::LocatableSeq to the Bio::SimpleAlign\par }{\insrsid928906     }{\cf2\insrsid928906 $simple_align}{\insrsid928906 ->add_seq(}{\cf2\insrsid928906 $seq}{\insrsid928906 );\par   }{\b\insrsid928906 \}\par }{\insrsid928906   }{\b\insrsid928906 push}{\insrsid928906 (}{\cf2\insrsid928906 @$all_aligns}{\insrsid928906 , }{\cf2\insrsid928906 $simple_align}{\insrsid928906 );\par }{\b\insrsid928906 \}\par }{\insrsid928906 \par }{\b\fs18\cf17\insrsid928906 # print all the genomic alignments using a Bio::AlignIO object\par }{\b\lang1034\langfe255\langnp1034\insrsid928906 my }{\cf2\lang1034\langfe255\langnp1034\insrsid928906 $alignIO }{\lang1034\langfe255\langnp1034\insrsid928906 = Bio::AlignIO->newFh(\par         }{\insrsid928906 -interleaved => }{\b\cf2\insrsid928906 0}{\insrsid928906 ,\par         -fh => }{\b\insrsid928906 \\}{\b\cf6\insrsid928906 *STDOUT}{\insrsid928906 ,\par         -format => }{\cf2\insrsid928906 $output_format}{\insrsid928906 ,\par         -idlength => }{\b\cf2\insrsid928906 10\par }{\insrsid928906     );\par   \par }{\b\insrsid928906 foreach my }{\cf2\insrsid928906 $this_align }{\insrsid928906 (}{\cf2\insrsid928906 @$all_aligns}{\insrsid928906 ) }{\b\insrsid928906 \{\par }{\insrsid928906   }{\b\insrsid928906 print}{\insrsid928906  }{\cf2\insrsid928906 $alignIO $this_align}{\insrsid928906 ;\par }{\b\insrsid928906 \}\par }{\insrsid928906 \par }{\b\insrsid928906 exit}{\insrsid928906 ;\par }\pard\plain \s48\qj \li0\ri0\sa283\sl72\slmult0\nowidctlpar\noline\brdrb\brdrdb\brdrw2\brdrcf15 \hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs12\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\fs20\insrsid928906 \par {\listtext\tab}}\pard\plain \s4\qj \li0\ri0\sb240\sa60\sl72\slmult0\keepn\nowidctlpar\jclisttab\tx0\hyphpar0\aspalpha\aspnum\faauto\ls1\ilvl3\outlinelevel3\adjustright\rin0\lin0\itap0 \b\f28\fs28\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 Orthologues and Protein clusters\par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 NB : This following is very much a draft at this stage with some piece of code to give examples, but not much comments.\par }\pard\plain \s5\qj \li0\ri0\sb144\sa144\sl72\slmult0\keepn\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\outlinelevel4\adjustright\rin0\lin0\itap0 \b\f5\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 Member objects\par }\pard\plain \s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\b\fs18\insrsid928906 # get the MemberAdaptor\par }{\insrsid928906 my $ma = Bio::EnsEMBL::Registry->get_adaptor($dbname,\rquote compara\rquote ,\rquote Member\rquote );\par }{\b\fs18\insrsid928906 # fetch a Member\par }{\insrsid928906 my $member = $ma->fetch_by_source_stable_id(\lquote ENSEMBLGENE\rquote ,\rquote ENSG00000004059\rquote );\par }{\b\fs18\insrsid928906 # print out some information about the Member\par }{\insrsid928906 print join (\ldblquote  \ldblquote , map \{ $member->$_ \} qw(chr_name chr_start chr_end description source_name taxon_id taxon)),\rdblquote \\n\rdblquote ;\par \par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\f6\insrsid928906 chr_name}{\f27\fs16\insrsid928906 , }{\f6\insrsid928906 chr_start}{\f27\fs16\insrsid928906 , }{\f6\insrsid928906 chr_end}{\f27\insrsid928906  }{\insrsid928906 and }{\f6\insrsid928906 description}{\f2\insrsid928906  }{\insrsid928906 are self-explanatory.\par }{\f6\insrsid928906 source_name}{\f2\insrsid928906  }{\insrsid928906 tells about the origin of the Member entry, and  can be either \par }\pard \qj \fi720\li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid928906 ENSEMBLPEP, derived from ensembl translation,\par or ENSEMBLGENE, derived from an ensembl gene,\par or SWISSPROT, derived from a Uniprot/Swissprot entry,\par or SPTREMBL, derived from a Uniprot/SP-TrEMBL entry.\par }\pard \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f6\insrsid928906 taxon_id }{\insrsid928906 e.g. 9606 correspond to the NCBI taxonomy identifier (see }{\field{\*\fldinst {\insrsid928906 HYPERLINK "http://www.ncbi.nlm.nih.gov/Taxonomy/taxonomyhome.html/"}{\insrsid928906 {\*\datafield 00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b7000000068007400740070003a002f002f007700770077002e006e006300620069002e006e006c006d002e006e00690068002e0067006f0076002f005400610078006f006e006f006d0079002f007400610078006f006e006f006d00790068006f006d0065002e00680074006d006c002f000000}}}{\fldrslt {\cs16\ul\cf2\insrsid928906 http://www.ncbi.nlm.nih.gov/Taxonomy/taxonomyhome.html/}}}{\insrsid928906  for more details).\par }{\f6\insrsid928906 taxon}{\f2\insrsid928906  }{\insrsid928906 returns a }{\f6\insrsid928906 Bio::EnsEMBL::Compara::Taxon}{\insrsid928906  object that inherits itself from Bio::Species, so from this object you can get additional information about the species.\par }\pard\plain \s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 my $taxon = $member->taxon;\par print join (\ldblquote ; \ldblquote , map \{ $taxon->$_ \} qw(common_name genus species binomial classification)),\rdblquote \\n\rdblquote ;\par \par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 respectively for these method calls and in the case of human species, you will obtain\par }\pard\plain \s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\lang1034\langfe255\langnp1034\insrsid928906 human; Homo; sapiens; Homo sapiens; sapiens Homo Hominidae Catarrhini Primates Eutheria Mammalia Euteleostomi Vertebrata Craniata Chordata Metazoa Eukaryota\par }{\lang1034\langfe255\langnp1034\insrsid928906 \tab  \par }\pard\plain \s5\qj \li0\ri0\sb144\sa144\sl72\slmult0\keepn\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\outlinelevel4\adjustright\rin0\lin0\itap0 \b\f5\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 Homology objects\par }\pard\plain \s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\b\fs18\insrsid928906 # first you have to get a Member object. In case of homology is a gene, in \par }{\b\fs18\insrsid928906 # case of family it can be a gene or a protein\par \par }{\insrsid928906 my $ma = Bio::EnsEMBL::Registry->get_adaptor($dbname,\rquote compara\rquote ,\rquote Member\rquote );\par my $member = $ma->fetch_by_source_stable_id(\lquote ENSEMBLGENE\rquote ,\rquote ENSG00000004059\rquote );\par \par }{\b\fs18\insrsid928906 # then you get the homologies where the member is involved\par \par }{\insrsid928906 my $ha = Bio::EnsEMBL::Registry->get_adaptor($dbname,\rquote compara\rquote ,\rquote Homology\rquote );\par my $homologies = $ha->fetch_by_Member($member);\par fetch_by_Member_Homology_source (fetch_by_Member_MethodLink)\par \par }{\b\fs18\insrsid928906 # That will return an array reference with all homologies (orthologues, and\par # in some cases paralogues) against other species.\par # Then for each homology, you get all the Members implicated\par \par }{\insrsid928906 foreach my $homology (@\{$homologies\}) \{\par }{\b\fs18\insrsid928906 # You will find different kind of description\par # UBRH, MBRH, MBRH, RHS, YoungParalogues\par # see ensembl-compara/docs/docs/schema_doc.html for more details\par \par }{\insrsid928906 print $homology->description,\rdblquote  \rdblquote , $homology->subtype,\rdblquote \\n\rdblquote ;\par \par }{\b\fs18\insrsid928906 # each homology relation have only 2 members, you should find there\par # the initial member used in the first fetching\par \par }{\insrsid928906 for each my $member_attribute (@\{$homology->get_all_Member_Attribute\})\par \par }{\b\fs18\insrsid928906 # for each Member, you get information on the Member specifically and in \par # relation to the homology relation via Attribute object\par \par }{\insrsid928906     my ($member, $attribute) = @\{$member_attribute\};\par     print join (\ldblquote  \ldblquote , map \{ $member->$_ \}  qw(stable_id taxon_id)),"\\n";\par     print join (\ldblquote  \ldblquote , map \{ $attribute->$_ \} qw(perc_id perc_pos perc_cov)),"\\n";\par \par   \}\par \par }{\b\fs18\insrsid928906 # You can even retrieve the HSP alignment between the 2 proteins, \par # HSP used to build the homology releationship at the peptide level\par \par }{\insrsid928906   my $sa = $homology->get_SimpleAlign();\par   my $alignIO = Bio::AlignIO->newFh(-interleaved => 0,\par                                     -fh => \\*STDOUT,\par                                     -format => "clustalw",\par                                     -idlength => 20);\par \par   }{\lang1036\langfe255\langnp1036\insrsid928906 print $alignIO $sa;}{\lang1036\langfe255\dbch\f15\langnp1036\insrsid928906 \hich\af6\dbch\af15\loch\f6  \par }{\lang1036\langfe255\langnp1036\insrsid928906 \par }{\b\fs18\insrsid928906 # or at the nucleotide level. You will need to make you have a connection to\par # the corresponding core databases through the Bio::EnsEMBL::Registry\par \par }{\insrsid928906   $sa = $homology->get_SimpleAlign(\lquote cdna\rquote );\par   my $alignIO = Bio::AlignIO->newFh(-interleaved => 0,\par                                     -fh => \\*STDOUT,\par                                     -format => "phylip",\par                                     -idlength => 20);\par \par   }{\lang1036\langfe255\langnp1036\insrsid928906 print $alignIO $sa;\par \par }{\insrsid928906 \}\par \par }\pard\plain \s5\qj \li0\ri0\sb144\sa144\sl72\slmult0\keepn\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\outlinelevel4\adjustright\rin0\lin0\itap0 \b\f5\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 Family objects\par }\pard\plain \ql \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 You can obtain them in the same way as Homology objects\par \par }\pard\plain \s42\qj \li0\ri0\sl130\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f6\fs16\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 my $ma = Bio::EnsEMBL::Registry->get_adaptor($dbname,\rquote compara\rquote ,\rquote Member\rquote );\par my $member = $ma->fetch_by_source_stable_id(\lquote ENSEMBLGENE\rquote ,\rquote ENSG00000004059\rquote );\par \par my $fa = Bio::EnsEMBL::Registry->get_adaptor($dbname,\rquote compara\rquote ,\rquote Family\rquote );\par my $families = $fa->fetch_by_Member($member);\par \par foreach my $family (@\{$families\}) \{\par   print join (\ldblquote  \ldblquote , map \{ $family->$_ \}  qw(}{\dbch\f15\insrsid928906 \hich\af6\dbch\af15\loch\f6 description description_score}{\insrsid928906 )),"\\n";\par \par   for each my $member_attribute (@\{$family->get_all_Member_Attribute\})\par     my ($member, $attribute) = @\{$member_attribute\};\par     print $member->stable_id," ",$member->taxon_id,"\\n";\par   \}\par \par   my $sa = $family->get_SimpleAlign();\par   my $alignIO = Bio::AlignIO->newFh(-interleaved => 0,\par                                     -fh => \\*STDOUT,\par                                     -format => "phylip",\par                                     -idlength => 20);\par \par   }{\lang1036\langfe255\langnp1036\insrsid928906 print $alignIO $sa;\par \par   }{\insrsid928906 $sa = $family->get_SimpleAlign(\lquote cdna\rquote );\par   my $alignIO = Bio::AlignIO->newFh(-interleaved => 0,\par                                     -fh => \\*STDOUT,\par                                     -format => "phylip",\par                                     -idlength => 20);\par \par   }{\lang1036\langfe255\langnp1036\insrsid928906 print $alignIO $sa;\par }{\insrsid928906 \}\par \par {\listtext\tab}}\pard\plain \s4\qj \li0\ri0\sb240\sa60\sl72\slmult0\keepn\nowidctlpar\jclisttab\tx0\hyphpar0\aspalpha\aspnum\faauto\ls1\ilvl3\outlinelevel3\adjustright\rin0\lin0\itap0 \b\f28\fs28\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 Further help\par }\pard\plain \qj \li0\ri0\sa144\sl72\slmult0\nowidctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f5\fs18\lang2057\langfe255\cgrid\langnp2057\langfenp255 {\insrsid928906 For additional information or help mail }{\field{\*\fldinst {\insrsid928906 HYPERLINK "mailto:ensemb-dev@ebi.ac.uk"}{\insrsid928906 {\*\datafield 00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b380000006d00610069006c0074006f003a0065006e00730065006d0062002d0064006500760040006500620069002e00610063002e0075006b000000}}}{\fldrslt {\cs16\ul\cf2\insrsid928906 ensemb-dev@ebi.ac.uk}}}{\insrsid928906 . You will need to subscribe to this mailing list to use it (see how to subscribe in }{\field{\*\fldinst {\insrsid928906 HYPERLINK "http://www.ensembl.org/Docs/Lists/"}{\insrsid928906 {\*\datafield 00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b4600000068007400740070003a002f002f007700770077002e0065006e00730065006d0062006c002e006f00720067002f0044006f00630073002f004c0069007300740073002f000000}}}{\fldrslt {\cs16\ul\cf2\insrsid928906 http://www.ensembl.org/Docs/Lists/}}}{\insrsid928906 ).\par \par }}