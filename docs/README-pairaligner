This README describes how to set up the lastz or translated blat pairwise alignment system using the init_pipeline configuration system.

All the scripts are located relative to $ENSEMBL_CVS_ROOT_DIR (location of the cvs checkout)

This replaces $ENSEMBL_CVS_ROOT_DIR/ensembl-compara/scripts/pipeline/README-pairaligner and the $ENSEMBL_CVS_ROOT_DIR/ensembl-compara/scripts/pipeline/comparaLoadGenomes.pl, $ENSEMBL_CVS_ROOT_DIR/ensembl-compara/scripts/pipeline/loadPairAlignerSystem.pl and $ENSEMBL_CVS_ROOT_DIR/ensembl-compara/scripts/pipeline/loadChainNetSystem.pl scripts. This previous method is no longer supported after ensembl release 65. 

1- General description of the pipeline
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The pipeline consists of a number of stages. Firstly the pairwise executable (lastz or blat) is run. The alignments are then chained according to their location in both genomes and finally nets are produced which chooses the best sub-chain on the reference species in each region. A basic healthcheck is performed to check database consistency and can be compared to a previous release. The final stage is to report some basic statistical information (eg coverage).

The general configuration file for the pipeline is:

$ENSEMBL_CVS_ROOT_DIR/ensembl-compara/modules/Bio/EnsEMBL/Compara/PipeConfig/PairAligner_conf.pm

and there are 3 specific configuration files:

$ENSEMBL_CVS_ROOT_DIR/ensembl-compara/modules/Bio/EnsEMBL/Compara/PipeConfig/Lastz_conf.pm
	Default parameters for running Lastz between mammals.

$ENSEMBL_CVS_ROOT_DIR/ensembl-compara/modules/Bio/EnsEMBL/Compara/PipeConfig/Lastz_primate_conf.pm
	Default parameters for running Lastz between primates

$ENSEMBL_CVS_ROOT_DIR/ensembl-compara/modules/Bio/EnsEMBL/Compara/PipeConfig/TBlat_conf.pm
	Default parameters for running TBlat.


It is recommended to use a master database to maintain consistency between release and production databases. A few tables (notably: genome_db, dnafrag and method_link_species_set) are copied directly from the master database into the production database. See the README-master_database for details on how to setup and maintain a master database.

It is possible to run the pipeline in several ways. 
1) Using a master database and mlss_id (method_link_species_set_id)
This is the recommended way and will work for a single pairwise alignment

2) Using a master database and a configuration file
This should work with several pairwise analyses in the same database
The configuration file is the same as that used for the previous pipeline
eg $ENSEMBL_CVS_ROOT_DIR/ensembl-compara/scripts/pipeline/compara-hive-pairaligner-chain-net.conf.example

3) Using no master and a configuration file
This should work with several pairwise analyses in the same database
The configuration file is the same as that used for the previous pipeline
eg $ENSEMBL_CVS_ROOT_DIR/ensembl-compara/scripts/pipeline/compara-hive-pairaligner-chain-net.conf.example

4) Using no master and no configuration file
This uses the defaults and species details set in the pipeline configuration file. Will only work for a single pairwise alignment


2- Necessary code API and executables
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  bioperl-live (bioperl-1-2-3)
  ensembl
  ensembl-compara
  ensembl-hive
  ensebml-analysis

  executables
  ~~~~~~~~~~~
  Lastz: (Set in Lastz_conf.pm or Lastz_primate_conf.pm)
  lastz => /software/ensembl/compara/bin/lastz

  Translated blat: (Set in TBlat_conf.pm)
  blat => /usr/local/ensembl/bin/blat-32

  Jim Kent's programs: (Set in PairAligner_conf.pm)
  faToNib  => /software/ensembl/compara/bin/faToNib
  lavToAxt => /software/ensembl/compara/bin/lavToAxt
  axtChain => /software/ensembl/compara/bin/axtChain
  chainNet => /software/ensembl/compara/bin/chainNet

2.1 Code checkout

      cvs -d :ext:bio.perl.org:/home/repository/bioperl co -r branch-07 bioperl-live
      cvs -d :ext:cvs.sanger.ac.uk:/nfs/ensembl/cvsroot co ensembl
      cvs -d :ext:cvs.sanger.ac.uk:/nfs/ensembl/cvsroot co ensembl-compara
      cvs -d :ext:cvs.sanger.ac.uk:/nfs/ensembl/cvsroot co ensembl-hive
      cvs -d :ext:cvs.sanger.ac.uk:/nfs/ensembl/cvsroot co ensembl-analysis

in tcsh
    setenv ENSEMBL_CVS_ROOT_DIR  /some/path/to/modules
    setenv PERL5LIB  ${ENSEMBL_CVS_ROOT_DIR}/ensembl/modules:${ENSEMBL_CVS_ROOT_DIR}/bioperl-live:${ENSEMBL_CVS_ROOT_DIR}/ensembl-compara:${ENSEMBL_CVS_ROOT_DIR}/ensembl-hive:${ENSEMBL_CVS_ROOT_DIR}/ensembl-analysis
    setenv PATH $PATH:${ENSEMBL_CVS_ROOT_DIR}/ensembl-compara/script/pipeline:${ENSEMBL_CVS_ROOT_DIR}/ensembl-hive/scripts

in bash
    ENSEMBL_CVS_ROOT_DIR=/some/path/to/modules
    PERL5LIB=${ENSEMBL_CVS_ROOT_DIR}/ensembl/modules:${ENSEMBL_CVS_ROOT_DIR}/bioperl-live:${ENSEMBL_CVS_ROOT_DIR}/ensembl-compara:${ENSEMBL_CVS_ROOT_DIR}/ensembl-hive:${ENSEMBL_CVS_ROOT_DIR}/ensembl-hive
    PATH=$PATH:${ENSEMBL_CVS_ROOT_DIR}/ensembl-compara/scripts/pipeline:${ENSEMBL_CVS_ROOT_DIR}/ensembl-hive/scripts


3- Update the master database
   ~~~~~~~~~~~~~~~~~~~~~~~~~~
To run the pipeline with a master database (recommended) it is necessary to create it if it does not already exist (see README-master_database for details on how to create an initial master database) and to update it with the new species and method_link_species_set.

3.1- Update genome_db and dnafrag tables with any new species assembly using the update_genome.pl script
eg
The reg.conf should contain the compara_master and the location of the core database
perl $ENSEMBL_CVS_ROOT_DIR/ensembl-compara/scripts/pipeline/update_genome.pl --reg_conf reg.conf --compara compara_master --species "homo_sapiens"

3.2- Update method_link_species_set table with new method_link_species_set entry
perl $ENSEMBL_CVS_ROOT_DIR/ensembl-compara/scripts/pipeline/create_mlss.pl --method_link_type LASTZ_NET --genome_db_id 90,124 --source "ensembl" --compara mysql://user:pass@host:port/compara_master_db --url "mysql://user@host:3306/kb3_hsap_ogar_lastz_65"

4- Configure the pipeline
   ~~~~~~~~~~~~~~~~~~~~~~
You may need to modify the general and specific configuration files found in ensembl-compara/modules/Bio/EnsEMBL/Compara/PipeConfig/. Values specified on the command-line overwrite those in the Lastz or TBlat conf files and values in those files overwrite values in the PairAligner_conf.pm.

ie command_line over-rides Lastz_conf/TBlat_conf over-rides PairAligner_conf

4.1- PairAligner_conf.pm

i) Parameters which may need changing:
mlss_id                => it is recommended that this is set on the command line rather than in the conf file
dbname                 => it is recommended that this is set on the command line. Note that the user name defined in
		            $ENV{USER} is prepended to dbname so that a dbname of hsap_ptro_lastz will become 
			    kb3_hsap_ptro_lastz
release                => ensembl release. Used to create various filenames and default database name
ensembl_cvs_root_dir   => location of ensembl cvs root directory

faToNib_exe,lavToAxt_exe,axtChain_exe,chainNet_exe => location of Jim Kent's executables.

pipeline_db		   => production database			
master_db		   => master database
staging_loc1,staging_loc1  => current ensembl core databases
livemirror_loc		   => location of previous release core databases
curr_core_sources_locs     => Location of core databases. These are used to fill in the 'location' field of the genome_db table.

ii) If you are using the old-style configuration file, you can remove general configuration parameters and use the values from the PairAligner_conf.pm

eg
The old-style configuration file may define the PAIR_ALIGNER as simply:
{ TYPE => PAIR_ALIGNER,
  'reference_collection_name' => 'homo_sapiens lastz',
  'non_reference_collection_name' => 'mus_musculus lastz',
},

and the 'method_link', 'analysis_template', 'max_parallel_workers' etc parameters can be set globally in the PairAligner_conf.pm file. 

iii) If you are not using a master database, remember to unset the master_db parameter:
	master_db => '',

4.2- Lastz_conf.pm, Lastz_primate_conf.pm or TBlat_conf.pm
Options you may wish to change:

a) The location of the core databases is defined in PairAligner_conf.pm and defaults to the staging servers. However, the location of the core databases can be defined specifically and the 'curr_core_dbs_locs' set. You must set curr_core_sources_locs to '' to over-ride the default values given in PairAligner_conf.pm. This is useful to use a local core database.

'reference' => {
		-host           => "host_name",
		-port           => port,
		-user           => "user_name",
		-dbname         => "my_human_database",
		-species        => "homo_sapiens"
	       },
'non_reference' => {
		    -host           => "host_name",
		    -port           => port,
		    -user           => "user_name",
		    -dbname         => "my_bushbaby_database",
		    -species        => "otolemur_garnettii"
		  },
'curr_core_dbs_locs'    => [ $self->o('reference'), $self->o('non_reference') ],
'curr_core_sources_locs'=> '',

b) ref_species, default is 'homo_sapiens'.

c) default_chunks

d) pair_aligner_options


5- Run init_pipeline.pl
   ~~~~~~~~~~~~~~~~~~~~
Examples:

a) master database, 2 primates, writing statistics to database (recommended)
init_pipeline.pl Bio::EnsEMBL::Compara::PipeConfig::Lastz_primate_conf --dbname hsap_pabe_lastz_66 --password *** --mlss_id 557 --config_url "mysql://user:pass@host:port/pair_aligner_config"

b) master database, 2 mammals, using local core database (ie not on ens-livemirror or ens-staging) 
 i) define core databases in reg.conf. 
   init_pipeline.pl Bio::EnsEMBL::Compara::PipeConfig::Lastz_conf --dbname hsap_ogar_lastz_65 --password *** --reg_conf reg.conf --mlss_id 545 
 
ii) define core databases directly in Lastz or TBlat conf files
   init_pipeline.pl Bio::EnsEMBL::Compara::PipeConfig::Lastz_conf --dbname hsap_ogar_lastz_65 --password *** --mlss_id 545 

c) use configuration file
init_pipeline.pl Bio::EnsEMBL::Compara::PipeConfig::Lastz_conf --dbname hsap_mmus_rnov_lastz_66 --password *** --conf_file my_conf_file


Sync and loop the beekeeper.pl as shown in init_pipeline.pl's output

6- Healthchecks and Statistics
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~
A few simple healthchecks are performed and the results are written to the job_message table. Simple coverage statistics are also performed and again, the results are written to the job_message table.
