############################ Overall pipeline summary

The EPO pipeline can be divided into 3 parts:
1). Generating the anchors for constructing the graph. The anchors consist of 
two or more sequences which are generated from pairwise whole-genome alignments 
(eg. BLASTZ/LASTZ or tBLAT alignments).
2). Once the anchors are generated these can be mapped to the target genomes 
(we use exonerate to do this).
3). The positions where the anchors map are then dumped to file and used as an 
input to the program Enredo, which generates a graph representation of the "syntenic"
regions shared by the target genomes. The syntenic regions from enredo are loaded 
into a database and finally the these are aligned using ortheus 
(which also generates ancestral sequences).

###########################

This README describes the third part of the pipeline (see above)

###########################

All the scripts are located relative to $ENSEMBL_CVS_ROOT_DIR (location of the cvs checkout)

The configuration parameters for the pipeline are contained in the Perl module:

$ENSEMBL_CVS_ROOT_DIR/ensembl-compara/modules/Bio/EnsEMBL/Compara/PipeConfig/EPO_pt3_conf.pm

You will need 2 pre-existing databases: 
The first database ('compara_mapped_anchor_db') will hold the data for the anchor set mapped to the various genomes (see epo_pt2.txt).
The second database databases ('compara_master') will hold general information regarding the dnafrags, genome_dbs, method_link_ids, 
method_link_species_set_ids etc. used.

You will also need to define the location of the databases containing the species assemblies ('main_core_dbs' and/or 'additional_core_db_urls') 
the sequence from which will be use to generate the MSA.

Necessary software components
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You will also need to install the following executables and set their locations:

 bl2seq (from NCBI) - set in the 'bl2seq' 
 gerpcol and gerpelem (http://mendel.stanford.edu/SidowLab/downloads/gerp/) - set in 'gerp_exe_dir'
 pecan (http://hgwdev.cse.ucsc.edu/~benedict/code/Pecan.html) - set in 'jar_file'
 enredo (http://www.ebi.ac.uk/~jherrero/downloads/enredo/) - set in 'enredo_bin_dir'
 ortheus (https://github.com/benedictpaten/ortheus)

You will also need the following:

MySQL 5.1             (or higher)        * Perl 5.6              (or higher)
Perl DBI API 1.6      (or higher)

EnsEMBL and BioPerl software:
        * bioperl-live          - (bioperl-1-2-3)
        * ensembl               - core API on which the rest of ensembl APIs are based
        * ensembl-compara       - Compara API (data objects, db adaptors, pipeline runnables, pipeline configuration)
        * ensembl-analysis      - some of the pipeline runnables live here
        * ensembl-hive          - the system to run pipelines


1. General description of the pipeline
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The pipeline sets up an ancestral database to store the predicted ancestral genome sequences.
The nesessary tables (genome_db, dnafrags, method_link etc.) are set up using data from the compara_master and core databases.
Mapping information is dumped from the 'compara_mapped_anchor_db' database to file and enredo is run using this file as input.
Enredo generates a graph representation of the "syntenic" regions shared by the mapped genomes and writes this graph to file.
The syntenic regions from enredo are loaded into the pipeline database (the dnafrag_region and synteny_region tables)
These loaded syntenic regions are aligned using ortheus (which also generates ancestral sequences).
Gerp is used to generate conservation scores and constrained elements from the alignments.

2. Configuration of the pipeline
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


3. Run init_pipeline.pl
~~~~~~~~~~~~~~~~~~~~~~~
init_pipeline.pl Bio::EnsEMBL::Compara::PipeConfig::EPO_pt3_conf.pm

and then run the beekeeper.pl (see README-beekeeper.txt)




