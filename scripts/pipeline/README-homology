ABOUT
~~~~~

This document describes how to run the ensembl-compara homology
pipeline.

- Loads the longest peptide for each gene locii in each configured
  species database into the compara DB's member table.

- Loads each UniProt protein into the member table (metazoa only for
  now; needs extending for e.g. viridiplantae). Only needed if the
  family pipeline is to be run subsequently.

- Performs all-against-all blastp searched of the member proteins in
  the DB, and loads the processed results into the homology_member
  table.

- Run this pipeline in preparation for running the family or gene-tree
  pipelines.


1- code API needed and executable
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  bioperl-live (bioperl-1-2-0)
  bioperl-run (1.4) for the CodeML runnable/parser
  ensembl
  ensembl-compara
  ensembl-hive
  ensembl-analysis
  ensembl-pipeline

  executables
  ~~~~~~~~~~~
  wublastp
      using /usr/local/ensembl/bin/wublastp
  setdb
      using /usr/local/ensembl/bin/setdb
  codeml
      using /usr/local/ensembl/bin/codeml

1.2 Code checkout

bioperl code;

  $ cvs -d :ext:bio.perl.org:/home/repository/bioperl \
    co -r branch-1-2 bioperl-live

bioperl-run code (for the CodeML runnable/parser)
  
  $ cvs -d :ext:bio.perl.org:/home/repository/bioperl \
    co -r bioperl-run-release-1-4-0 bioperl-run

core ensembl code

  $ cvs -d :ext:cvs.sanger.ac.uk:/nfs/ensembl/cvsroot co ensembl

ensembl-compara code (for Compara API and schema)

  $ cvs -d :ext:cvs.sanger.ac.uk:/nfs/ensembl/cvsroot co ensembl-compara

ensembl-analysis code (for Runnables)

  $ cvs -d :ext:cvs.sanger.ac.uk:/nfs/ensembl/cvsroot co ensembl-analysis

ensembl-pipeline code (deprecated by ensembl-analysis, but some legacy...)

  $ cvs -d :ext:cvs.sanger.ac.uk:/nfs/ensembl/cvsroot co ensembl-pipeline

ensembl-hive code

  $ cvs -d :ext:cvs.sanger.ac.uk:/nfs/ensembl/cvsroot co  ensembl-hive


1.3 Perl environment

in tcsh
  $ setenv BASEDIR   /some/path/to/modules
  $ setenv PERL5LIB ${BASEDIR}/ensembl/modules:${PERL5LIB}
  $ setenv PERL5LIB ${BASEDIR}/ensembl-compara/modules:${PERL5LIB}
  $ setenv PERL5LIB ${BASEDIR}/ensembl-pipeline/modules:${PERL5LIB}
  $ setenv PERL5LIB ${BASEDIR}/ensembl-analysis/modules:${PERL5LIB}
  $ setenv PERL5LIB ${BASEDIR}/ensembl-hive/modules:${PERL5LIB}
  $ setenv PERL5LIB ${BASEDIR}/bioperl-live:${PERL5LIB}
  $ setenv PERL5LIB ${BASEDIR}/bioperl-run:${PERL5LIB}

in bash
  $ BASEDIR=/some/path/to/modules
  $ export PERL5LIB=${BASEDIR}/ensembl/modules:${PERL5LIB}
  $ export PERL5LIB=${BASEDIR}/ensembl-compara/modules:${PERL5LIB}
  $ export PERL5LIB=${BASEDIR}/ensembl-pipeline/modules:${PERL5LIB}
  $ export PERL5LIB=${BASEDIR}/ensembl-analysis/modules:${PERL5LIB}
  $ export PERL5LIB=${BASEDIR}/ensembl-hive/modules:${PERL5LIB}
  $ export PERL5LIB=${BASEDIR}/bioperl-live:${PERL5LIB}
  $ export PERL5LIB=${BASEDIR}/bioperl-run:${PERL5LIB}


1.4 CPAN Perl modules
  www.cpan.org

  DBI
  DBD::mysql
  Data::UUID
  Statistics::Descriptive


2- Configure database
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Pick a mysql instance and create a database;

  $ mysql -hecs2 -P3361 -uensadmin -pxxxx \
    -e "create database my_ensembl_compara_40_1"

And load the schemas;

  $ mysql -hecs2 -P3361 -uensadmin -pxxxx my_ensembl_compara_40_1 \
    < $BASEDIR/ensembl-hive/sql/tables.sql
  $ mysql -hecs2 -P3361 -uensadmin -pxxxx my_ensembl_compara_40_1 \
    < $BASEDIR/ensembl-compara/sql/table.sql
  $ mysql -hecs2 -P3361 -uensadmin -pxxxx my_ensembl_compara_40_1 \
    < $BASEDIR/ensembl-compara/sql/pipeline-tables.sql

You now need to load the NCBI taxonomy data into the ncbi_taxa_name
and ncbi_taxa_node tables. See the following file;

  $BASEDIR/ensembl-compara/scripts/taxonomy/README-taxonomy

You may alternatively be able to copy taxonomy tables from an existing
compara db (this may take a few mins), e.g.

  $ mysqldump -hecs2 -P3365 -uensro --no-create-info \
    ncbi_taxonomy ncbi_taxa_node ncbi_taxa_name \
    | mysql -hecs2 -P3361 -uensadmin -pxxxx my_ensembl_compara_40_1


3- Choose a working directory with enough disk space
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The homology pipeline takes several GB of space for fasta databases and
error and output from the RunnableDBs

fasta blast database directory =
/nfs/ecs4/work2/ensembl/jessica/data/blastDB/my_ensembl_compara_40_1

You only need to create this dir if you want to capture the LSF out
and err files, see the IMPORTANT note below;
hive worker output directory =
/nfs/ecs4/work2/ensembl/jessica/data/hive_output/my_ensembl_compara_40_1


4- Copy and modify the compara-hive config file
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You may need to change the database names, port, dbnames, and the
paths to the 'hive_output_dir' and 'fasta_dir'. Note that these dirs
must exist.

  $ cd $BASEDIR/ensembl-compara/scripts/pipeline
  $ cp compara-hive-homology.conf.example my_compara.conf
  <editor> my_compara.conf

If you are just interested in building the orthologs/gene-trees, and
are not going to run the family pipeline later, comment out the
TYPE=>UNIPROT directives.

If you are going to build gene-trees and are not interested in the
old-style (pre-v39) ENSEMBL_ORTHOLOGS, comment out the TYPE=>dNdS and
TYPE=>HOMOLOGY directives.

IMPORTANT: The hive system can generate an awful lot of log outputs
that are dumped in the hive_output_dir. When a pipeline runs fine,
these are not needed and can take a lot of disk space as well as
generate a large number of files. If you don't want log outputs
(recommended), then just don't specify any hive_output_dir.


4.1 Copy and modify the Bio::EnsEMBL::Analysis::Config::General.pm file
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
You may need to change the locations of BIN_DIR, DATA_DIR and LIB_DIR;

  $ cd $BASEDIR/ensembl-analysis/modules/Bio/EnsEMBL/Analysis/Config
  $ cp General.pm.example General.pm
  <editor> General.pm


4.2 Copy and modify the Bio::EnsEMBL::Analysis::Config::Blast.pm file
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  $ cd $BASEDIR/ensembl-analysis/modules/Bio/EnsEMBL/Analysis/Config
  $ cp Blast.pm.example Blast.pm
  <editor> Blast.pm


4.3 Set the blast envirnment
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
These environment variables cannot be set in either ::Config::Blast or
::Config::General;

in tcsh:
  $ setenv PATH /usr/local/ensembl/bin:$PATH
  $ setenv BLASTMAT /usr/local/ensembl/data/blastmat:$BLASTMAT
  $ setenv BLASTFILTER /usr/local/ensembl/bin:$BLASTFILTER


5- Run the configure scripts
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The loadHomologySystem script creates the analysis entries for the
processing system, and creates both the dataflow rule and the analysis
control rules.  It also initializes the analysis_stats row for each
analysis.  These rows hold information like batch_size, hive_capacity,
and run-time stats that the Hive's Queen will update.

The comparaLoadGenomes script use the information in the conf file to
connect to the core databases, queries for things like taxon_id,
assembly, gene_build, and names to create entries in the genome_db
table.  It also sets the genome_db.locator column to allow the system
to know where the respective core databases are located.  There is an
additional table called genome_db_extn which will be deprecated
shortly, but as of today (16 June, 2004) it is still used to hold a
'phylum' value for each genome to allow the option of building
homologies only within phylums.  This script will also 'seed' the
pipeline/hive system by creating the first jobs in the analysis_job
table for the analysis 'SubmitGenome'.

These scripts may give you warnings if the output directories are not
available or if it's unable to connect to core databases.

 $ cd $BASEDIR/ensembl-compara/scripts/pipeline
 $ ./comparaLoadGenomes.pl -conf my_compara.conf
 $ ./loadHomologySystem.pl -conf my_compara.conf

If you are running this for the Ensembl production release, make sure
you are in sycn with the method_link_species_set in the compara master db.
If not create the synchronized method_link_species_set with the ensembl-compara/scripts/pipeline/create_mlss.pl

Also load the ncbi taxonomy data, see ensembl-compara/scripts/taxonomy/README-taxonomy

At this point the system is ready to run


6- Run the hive
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

One must first make sure that the available hive scripts are available
in one's path.  This can be done by either extending PATH or linking the
scripts to an existing directory in the PATH

  tcsh$ setenv PATH ${PATH}:${BASEDIR}/ensembl-hive/scripts
  bash$ export PATH=$PATH:$BASEDIR/ensembl-hive/scripts

You may also need to set the LSB_DEFAULTPROJECT environment variable
if you are using LSF across the sanger farm;

  tcsh$ setenv LSB_DEFAULTPROJECT ensembl-compara
  bash$ export LSB_DEFAULTPROJECT=ensembl-compara
       
There are two beekepers, one which uses LSF job submission system, and
another that uses the local machine only. If using the local machine,
add the -local flag to the command and the workers will run as 
background system commands rather than being submited to an LSF resource.

 $ beekeeper.pl \
   -url mysql://user:password@ecs2:3361/my_ensembl_compara_40_1 -loop

where 'user' and 'password' allow write access to the database

Running the complete homology build for ensembl31 with 16 species takes around
10,000 CPU-hrs of total work.  On a 600 CPU cluster this can finish in anywhere
from 1-3 days depending on availability of resources.

for more details on controling the hive system do
  $ beekeeper.pl -help

