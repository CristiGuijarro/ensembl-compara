#!/usr/local/ensembl/bin/perl

use strict;

use Bio::EnsEMBL::DBSQL::DBAdaptor;
use Bio::EnsEMBL::Compara::DBSQL::DBAdaptor;
use Bio::EnsEMBL::Analysis;
use Getopt::Long;

my $usage = "
dumpsynteny -host ecs1b.sanger.ac.uk 
            -user ensro
	    -port 3352
            -dbname ensembl_compara_10_1
            -chr_names \"22\"
            -species1 \"Homo sapiens\"
            -assembly1 NCBI30
            -species2 \"Mus musculus\"
            -assembly2 MGSC3
            -conf_file Compara.conf
            -align_type BLASTZ_NET

$0 [-help]
   -host compara_db_host_server
   -user username (default = 'ensro')
   -port db port no
   -dbname compara_database_name
   -chr_names \"20,21,22\" (default = \"all\")
   -species1 (e.g. \"Homo sapiens\") from which alignments are queried and chr_names refer to
   -assembly1 (e.g. NCBI30) assembly version of species1
   -species2 (e.g. \"Mus musculus\") to which alignments are queried
   -assembly2 (e.g. MGSC3) assembly version of species2
   -align_type BLASTZ_NET
   -conf_file comparadb_configuration_file
              (see an example in ensembl-compara/modules/Bio/EnsEMBL/Compara/Compara.conf.example)

";

my $help = 0;
my $host = 'ecs2d.internal.sanger.ac.uk';
my $user = 'ensro';
my $pass = '';
my $dbname = 'ensembl_compara_10_1';
my $port= 3352;
my $species1 = 'Homo sapiens';
my $species1_assembly = 'NCBI30';
my $species2 = 'Mus musculus';
my $species2_assembly = 'MGSC3';
my $assembly_type = "WGA";

my $chr_names = "all";
my $conf_file = "/nfs/acari/abel/src/ensembl_main/ensembl-compara/scripts/PhusionBlast/Compara.conf";

$| = 1;

&GetOptions('help' => \$help,
	    'host:s' => \$host,
	    'user:s' => \$user,
	    'dbname:s' => \$dbname,
	    'pass:s' => \$pass,
	    'port=i' => \$port,
	    'species1:s' => \$species1,
	    'assembly1:s' => \$species1_assembly,
	    'species2:s' => \$species2,
	    'assembly2:s' => \$species2_assembly,
	    'chr_names=s' => \$chr_names,
	    'conf_file=s' => \$conf_file,
	    'align_type=s' => \$assembly_type);

if ($help) {
  print $usage;
  exit 0;
}

print STDERR "Time in dumpgff " . time . "\n";

my $compdb = new Bio::EnsEMBL::Compara::DBSQL::DBAdaptor (-host        => $host,
							  -user        => $user,
							  -dbname      => $dbname,
							  -port		=> $port,
							  -pass        => $pass,
							  -conf_file   => $conf_file);

my $coredb = $compdb->get_db_adaptor($species1,$species1_assembly);

my $DnaAlignFeatureAdaptor = $compdb->get_DnaAlignFeatureAdaptor;
my $SliceAdaptor = $coredb->get_SliceAdaptor;
my $ChromosomeAdaptor = $coredb->get_ChromosomeAdaptor;

my @chromosomes;

if (defined $chr_names and $chr_names ne "all") {
  my @chr_names = split /,/, $chr_names;
  foreach my $chr_name (@chr_names) {
    push @chromosomes, $ChromosomeAdaptor->fetch_by_chr_name($chr_name);
  }
} else {
  @chromosomes = @{$ChromosomeAdaptor->fetch_all}
}

foreach my $chr (@chromosomes) {
  my $length = $chr->length;

  print STDERR "Got chr ".$chr->chr_name." length $length\n";
  
  my $start = 1;
  my $chunk = 5000000;
  
  my $chr_name = $chr->chr_name;
  open SYN,"|sort -u > $chr_name.syten.gff";
  
  while ($start <= $length) {
    
    my $end = $start + $chunk -1;
    
    if ($end > $length) {$end = $length;}
    
    my $Slice = $SliceAdaptor->fetch_by_chr_start_end( $chr->chr_name,
						       $start,
						       $end);

    my $synteny = $DnaAlignFeatureAdaptor->fetch_all_by_species_region($species1,$species1_assembly,$species2,$species2_assembly,$chr->chr_name,$start,$end,$assembly_type);

    print STDERR "Got features " . scalar(@{$synteny}) . "\n";
    
    foreach my $f (@{$synteny}) {

      my ($strand,$hstrand) = qw(+ +);

      if ($f->strand < 0) {
	$strand = "-";
      }
      if ($f->hstrand < 0) {
	$hstrand = "-";
      }
      
      # print out a in gff format
      print SYN  
	$f->seqname . "\t" .
	"synteny\t" .
	"similarity\t" .
	$f->start . "\t" .
	$f->end . "\t" .
	$f->score . "\t" .
	$strand . "\t" .
	".\t" .
	$f->hseqname . "\t" .
	$f->hstart . "\t" .
	$f->hend . "\t" .
	$hstrand . "\t" .
	".\n" 
    }
    
    $start += $chunk;
  }
  close SYN;
}
